{"version":3,"sources":["webpack://roguelike-js/./data/sprites|lazy|/^/.*/.*/.json$/|groupOptions: {}|namespace object","webpack://roguelike-js/./data/tilesets|lazy|/^/.*/.json$/|groupOptions: {}|namespace object","webpack://roguelike-js/./src/main/core/GameState.ts","webpack://roguelike-js/./src/main/core/InputHandler.ts","webpack://roguelike-js/./src/main/core/TurnHandler.ts","webpack://roguelike-js/./src/main/core/actions.ts","webpack://roguelike-js/./src/main/core/debug.ts","webpack://roguelike-js/./src/main/graphics/FontRenderer.ts","webpack://roguelike-js/./src/main/graphics/ImageBuilder.ts","webpack://roguelike-js/./src/main/graphics/ImageLoader.ts","webpack://roguelike-js/./src/main/graphics/ImageUtils.ts","webpack://roguelike-js/./src/main/graphics/MinimapRenderer.ts","webpack://roguelike-js/./src/main/graphics/SpriteRenderer.ts","webpack://roguelike-js/./src/main/graphics/animations/Animations.ts","webpack://roguelike-js/./src/main/graphics/sprites/DynamicSprite.ts","webpack://roguelike-js/./src/main/graphics/sprites/Sprite.ts","webpack://roguelike-js/./src/main/graphics/sprites/SpriteFactory.ts","webpack://roguelike-js/./src/main/graphics/sprites/StaticSprite.ts","webpack://roguelike-js/./src/main/items/InventoryItem.ts","webpack://roguelike-js/./src/main/items/InventoryMap.ts","webpack://roguelike-js/./src/main/items/ItemFactory.ts","webpack://roguelike-js/./src/main/items/ItemUtils.ts","webpack://roguelike-js/./src/main/items/MapItem.ts","webpack://roguelike-js/./src/main/items/ProjectileFactory.ts","webpack://roguelike-js/./src/main/items/equipment/Equipment.ts","webpack://roguelike-js/./src/main/items/equipment/EquipmentClass.ts","webpack://roguelike-js/./src/main/items/equipment/EquipmentMap.ts","webpack://roguelike-js/./src/main/maps/MapBuilder.ts","webpack://roguelike-js/./src/main/maps/MapFactory.ts","webpack://roguelike-js/./src/main/maps/MapInstance.ts","webpack://roguelike-js/./src/main/maps/MapUtils.ts","webpack://roguelike-js/./src/main/maps/generation/BlobDungeonGenerator.ts","webpack://roguelike-js/./src/main/maps/generation/DungeonGenerator.ts","webpack://roguelike-js/./src/main/maps/generation/RoomCorridorDungeonGenerator2.ts","webpack://roguelike-js/./src/main/maps/generation/TileEligibilityChecker.ts","webpack://roguelike-js/./src/main/sounds/AudioUtils.ts","webpack://roguelike-js/./src/main/sounds/CustomOscillator.ts","webpack://roguelike-js/./src/main/sounds/Music.ts","webpack://roguelike-js/./src/main/sounds/SoundFX.ts","webpack://roguelike-js/./src/main/sounds/SoundPlayer.ts","webpack://roguelike-js/./src/main/sounds/Sounds.ts","webpack://roguelike-js/./src/main/types/Color.ts","webpack://roguelike-js/./src/main/types/Direction.ts","webpack://roguelike-js/./src/main/types/PaletteSwaps.ts","webpack://roguelike-js/./src/main/types/TileFactory.ts","webpack://roguelike-js/./src/main/types/types.ts","webpack://roguelike-js/./src/main/units/Unit.ts","webpack://roguelike-js/./src/main/units/UnitAbility.ts","webpack://roguelike-js/./src/main/units/UnitBehaviors.ts","webpack://roguelike-js/./src/main/units/UnitClass.ts","webpack://roguelike-js/./src/main/units/UnitFactory.ts","webpack://roguelike-js/./src/main/units/controllers/AIUnitControllers.ts","webpack://roguelike-js/./src/main/units/controllers/PlayerUnitController.ts","webpack://roguelike-js/./src/main/utils/ArrayUtils.ts","webpack://roguelike-js/./src/main/utils/Pathfinder.ts","webpack://roguelike-js/./src/main/utils/PromiseUtils.ts","webpack://roguelike-js/./src/main/utils/TemplateUtils.ts","webpack://roguelike-js/./src/main/utils/random.ts","webpack://roguelike-js/webpack/bootstrap","webpack://roguelike-js/webpack/runtime/create fake namespace object","webpack://roguelike-js/webpack/runtime/define property getters","webpack://roguelike-js/webpack/runtime/ensure chunk","webpack://roguelike-js/webpack/runtime/get javascript chunk filename","webpack://roguelike-js/webpack/runtime/global","webpack://roguelike-js/webpack/runtime/hasOwnProperty shorthand","webpack://roguelike-js/webpack/runtime/load script","webpack://roguelike-js/webpack/runtime/make namespace object","webpack://roguelike-js/webpack/runtime/publicPath","webpack://roguelike-js/webpack/runtime/jsonp chunk loading","webpack://roguelike-js/./src/main/index.ts"],"names":[],"mappings":"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A;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,qCAAqC,iEAAiE;WACtG;WACA;WACA;WACA;WACA;WACA,E;;;;;WCzBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF,E;;;;;WCRA;WACA;WACA;WACA;WACA,E;;;;;WCJA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD,wF;;;;;WCAA;WACA;WACA;WACA;WACA,sBAAsB,4BAA4B,QAAQ;WAC1D;WACA;WACA;WACA,gBAAgB,oBAAoB;WACpC;WACA,kGAAkG,YAAY,OAAO;WACrH;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kEAAkE,kCAAkC;WACpG;WACA;WACA;WACA,E;;;;;WCzCA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kC;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,gCAAgC;;WAEhC;WACA;WACA;WACA,IAAI;WACJ,cAAc;WACd;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,oBAAoB;WAC1B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA,4G;;;;;;;;;;;;;;ACnF4C;AACH;AAEzC,yDAAU,EAAE,CAAC;AACb,sDAAS,EAAE,CAAC","file":"bundle.js","sourcesContent":["var map = {\n\t\"./equipment/bow.json\": [\n\t\t\"./data/sprites/equipment/bow.json\",\n\t\t\"data_sprites_equipment_bow_json\"\n\t],\n\t\"./equipment/helmet.json\": [\n\t\t\"./data/sprites/equipment/helmet.json\",\n\t\t\"data_sprites_equipment_helmet_json\"\n\t],\n\t\"./equipment/mail.json\": [\n\t\t\"./data/sprites/equipment/mail.json\",\n\t\t\"data_sprites_equipment_mail_json\"\n\t],\n\t\"./equipment/shield2.json\": [\n\t\t\"./data/sprites/equipment/shield2.json\",\n\t\t\"data_sprites_equipment_shield2_json\"\n\t],\n\t\"./equipment/sword.json\": [\n\t\t\"./data/sprites/equipment/sword.json\",\n\t\t\"data_sprites_equipment_sword_json\"\n\t],\n\t\"./static/map_bow.json\": [\n\t\t\"./data/sprites/static/map_bow.json\",\n\t\t\"data_sprites_static_map_bow_json\"\n\t],\n\t\"./static/map_helmet.json\": [\n\t\t\"./data/sprites/static/map_helmet.json\",\n\t\t\"data_sprites_static_map_helmet_json\"\n\t],\n\t\"./static/map_mail.json\": [\n\t\t\"./data/sprites/static/map_mail.json\",\n\t\t\"data_sprites_static_map_mail_json\"\n\t],\n\t\"./static/map_potion.json\": [\n\t\t\"./data/sprites/static/map_potion.json\",\n\t\t\"data_sprites_static_map_potion_json\"\n\t],\n\t\"./static/map_scroll.json\": [\n\t\t\"./data/sprites/static/map_scroll.json\",\n\t\t\"data_sprites_static_map_scroll_json\"\n\t],\n\t\"./static/map_sword.json\": [\n\t\t\"./data/sprites/static/map_sword.json\",\n\t\t\"data_sprites_static_map_sword_json\"\n\t],\n\t\"./units/player.json\": [\n\t\t\"./data/sprites/units/player.json\",\n\t\t\"data_sprites_units_player_json\"\n\t],\n\t\"./units/snake.json\": [\n\t\t\"./data/sprites/units/snake.json\",\n\t\t\"data_sprites_units_snake_json\"\n\t],\n\t\"./units/zombie.json\": [\n\t\t\"./data/sprites/units/zombie.json\",\n\t\t\"data_sprites_units_zombie_json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./data/sprites lazy recursive ^\\\\.\\\\/.*\\\\/.*\\\\.json$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./cave.json\": [\n\t\t\"./data/tilesets/cave.json\",\n\t\t\"data_tilesets_cave_json\"\n\t],\n\t\"./dungeon.json\": [\n\t\t\"./data/tilesets/dungeon.json\",\n\t\t\"data_tilesets_dungeon_json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./data/tilesets lazy recursive ^\\\\.\\\\/.*\\\\.json$\";\nmodule.exports = webpackAsyncContext;","import Unit from '../units/Unit';\r\nimport MapBuilder from '../maps/MapBuilder';\r\nimport MapInstance from '../maps/MapInstance';\r\nimport { GameScreen } from '../types/types';\r\nimport UnitAbility from '../units/UnitAbility';\r\n\r\n/**\r\n * Global mutable state\r\n */\r\nclass GameState {\r\n  screen: GameScreen;\r\n  playerUnit: Unit;\r\n  maps: (() => MapBuilder)[];\r\n  mapIndex: number | null;\r\n  private _map: MapInstance | null;\r\n  messages: string[];\r\n  turn: number;\r\n  queuedAbility: UnitAbility | null;\r\n\r\n  constructor(playerUnit: Unit, maps: (() => MapBuilder)[]) {\r\n    this.screen = GameScreen.TITLE;\r\n    this.playerUnit = playerUnit;\r\n    this.maps = maps;\r\n    this.mapIndex = 0;\r\n    this._map = null;\r\n    this.messages = [];\r\n    this.turn = 1;\r\n    this.queuedAbility = null;\r\n  }\r\n\r\n  getMap(): MapInstance {\r\n    if (!this._map) {\r\n      throw 'Tried to retrieve map before map was loaded';\r\n    }\r\n    return this._map;\r\n  }\r\n\r\n  setMap(map: MapInstance) {\r\n    this._map = map;\r\n  }\r\n}\r\n\r\nexport default GameState;\r\n","import TurnHandler from './TurnHandler';\r\nimport Sounds from '../sounds/Sounds';\r\nimport Unit from '../units/Unit';\r\nimport { pickupItem, useItem } from '../items/ItemUtils';\r\nimport { playSound } from '../sounds/SoundFX';\r\nimport { loadMap, returnToTitle, startGame } from './actions';\r\nimport { Coordinates, GameScreen, TileType } from '../types/types';\r\nimport UnitAbility from '../units/UnitAbility';\r\n\r\nenum KeyCommand {\r\n  UP = 'UP',\r\n  LEFT = 'LEFT',\r\n  DOWN = 'DOWN',\r\n  RIGHT = 'RIGHT',\r\n  SHIFT_UP = 'SHIFT_UP',\r\n  SHIFT_LEFT = 'SHIFT_LEFT',\r\n  SHIFT_DOWN = 'SHIFT_DOWN',\r\n  SHIFT_RIGHT = 'SHIFT_RIGHT',\r\n  TAB = 'TAB',\r\n  ENTER = 'ENTER',\r\n  SPACEBAR = 'SPACEBAR',\r\n  M = 'M',\r\n  KEY_1 = '1',\r\n  KEY_2 = '2',\r\n  KEY_3 = '3',\r\n  KEY_4 = '4',\r\n  KEY_5 = '5',\r\n  KEY_6 = '6',\r\n  KEY_7 = '7',\r\n  KEY_8 = '8',\r\n  KEY_9 = '9',\r\n  KEY_0 = '0'\r\n}\r\n\r\nfunction _mapToCommand(e: KeyboardEvent): (KeyCommand | null) {\r\n  switch (e.key) {\r\n    case 'w':\r\n    case 'W':\r\n    case 'ArrowUp':\r\n      return (e.shiftKey ? KeyCommand.SHIFT_UP : KeyCommand.UP);\r\n    case 's':\r\n    case 'S':\r\n    case 'ArrowDown':\r\n      return (e.shiftKey ? KeyCommand.SHIFT_DOWN : KeyCommand.DOWN);\r\n    case 'a':\r\n    case 'A':\r\n    case 'ArrowLeft':\r\n      return (e.shiftKey ? KeyCommand.SHIFT_LEFT : KeyCommand.LEFT);\r\n    case 'd':\r\n    case 'D':\r\n    case 'ArrowRight':\r\n      return (e.shiftKey ? KeyCommand.SHIFT_RIGHT : KeyCommand.RIGHT);\r\n    case 'Tab':\r\n      return KeyCommand.TAB;\r\n    case 'Enter':\r\n      return KeyCommand.ENTER;\r\n    case ' ':\r\n      return KeyCommand.SPACEBAR;\r\n    case 'm':\r\n    case 'M':\r\n      return KeyCommand.M;\r\n    case '1':\r\n      return KeyCommand.KEY_1;\r\n    case '2':\r\n      return KeyCommand.KEY_2;\r\n    case '3':\r\n      return KeyCommand.KEY_3;\r\n    case '4':\r\n      return KeyCommand.KEY_4;\r\n    case '5':\r\n      return KeyCommand.KEY_5;\r\n    case '6':\r\n      return KeyCommand.KEY_6;\r\n    case '7':\r\n      return KeyCommand.KEY_7;\r\n    case '8':\r\n      return KeyCommand.KEY_8;\r\n    case '9':\r\n      return KeyCommand.KEY_9;\r\n    case '0':\r\n      return KeyCommand.KEY_0;\r\n  }\r\n  return null;\r\n}\r\n\r\n// global state\r\n\r\nlet BUSY = false;\r\n\r\nconst keyHandlerWrapper = async (e: KeyboardEvent) => {\r\n  if (!BUSY) {\r\n    BUSY = true;\r\n    await keyHandler(e);\r\n    BUSY = false;\r\n  }\r\n};\r\n\r\nconst keyHandler = async (e: KeyboardEvent) => {\r\n  const command : (KeyCommand | null) = _mapToCommand(e);\r\n\r\n  switch (command) {\r\n    case KeyCommand.UP:\r\n    case KeyCommand.LEFT:\r\n    case KeyCommand.DOWN:\r\n    case KeyCommand.RIGHT:\r\n    case KeyCommand.SHIFT_UP:\r\n    case KeyCommand.SHIFT_DOWN:\r\n    case KeyCommand.SHIFT_LEFT:\r\n    case KeyCommand.SHIFT_RIGHT:\r\n      return _handleArrowKey(command);\r\n    case KeyCommand.SPACEBAR:\r\n      return TurnHandler.playTurn(null);\r\n    case KeyCommand.ENTER:\r\n      return _handleEnter();\r\n    case KeyCommand.TAB:\r\n      e.preventDefault();\r\n      return _handleTab();\r\n    case KeyCommand.M:\r\n      return _handleMap();\r\n    case KeyCommand.KEY_1:\r\n    case KeyCommand.KEY_2:\r\n    case KeyCommand.KEY_3:\r\n    case KeyCommand.KEY_4:\r\n    case KeyCommand.KEY_5:\r\n    case KeyCommand.KEY_6:\r\n    case KeyCommand.KEY_7:\r\n    case KeyCommand.KEY_8:\r\n    case KeyCommand.KEY_9:\r\n    case KeyCommand.KEY_0:\r\n      return _handleAbility(command);\r\n    default:\r\n      return Promise.resolve();\r\n  }\r\n};\r\n\r\nfunction _handleArrowKey(command: KeyCommand): Promise<void> {\r\n  const { state } = jwb;\r\n\r\n  switch (state.screen) {\r\n    case GameScreen.GAME:\r\n      let dx: number;\r\n      let dy: number;\r\n\r\n      switch (command) {\r\n        case KeyCommand.UP:\r\n        case KeyCommand.SHIFT_UP:\r\n          [dx, dy] = [0, -1];\r\n          break;\r\n        case KeyCommand.DOWN:\r\n        case KeyCommand.SHIFT_DOWN:\r\n          [dx, dy] = [0, 1];\r\n          break;\r\n        case KeyCommand.LEFT:\r\n        case KeyCommand.SHIFT_LEFT:\r\n          [dx, dy] = [-1, 0];\r\n          break;\r\n        case KeyCommand.RIGHT:\r\n        case KeyCommand.SHIFT_RIGHT:\r\n          [dx, dy] = [1, 0];\r\n          break;\r\n        default:\r\n          throw `Invalid direction command ${command}`;\r\n      }\r\n\r\n      const queuedOrder: (unit: Unit) => Promise<void> = (() => {\r\n        switch (command) {\r\n          case KeyCommand.SHIFT_UP:\r\n          case KeyCommand.SHIFT_DOWN:\r\n          case KeyCommand.SHIFT_LEFT:\r\n          case KeyCommand.SHIFT_RIGHT:\r\n            return (u: Unit) => UnitAbility.SHOOT_ARROW.use(u, { dx, dy });\r\n          default:\r\n            if (!!jwb.state.queuedAbility) {\r\n              const ability = jwb.state.queuedAbility;\r\n              jwb.state.queuedAbility = null;\r\n              return (u: Unit) => ability.use(u, { dx, dy });\r\n            }\r\n            return (u: Unit) => UnitAbility.ATTACK.use(u, { dx, dy });\r\n        }\r\n      })();\r\n      return TurnHandler.playTurn(queuedOrder);\r\n    case GameScreen.INVENTORY:\r\n      const { inventory } = state.playerUnit;\r\n\r\n      switch (command) {\r\n        case KeyCommand.UP:\r\n        case KeyCommand.SHIFT_UP:\r\n          inventory.previousItem();\r\n          break;\r\n        case KeyCommand.DOWN:\r\n        case KeyCommand.SHIFT_DOWN:\r\n          inventory.nextItem();\r\n          break;\r\n        case KeyCommand.LEFT:\r\n        case KeyCommand.SHIFT_LEFT:\r\n          inventory.previousCategory();\r\n          break;\r\n        case KeyCommand.RIGHT:\r\n        case KeyCommand.SHIFT_RIGHT:\r\n          inventory.nextCategory();\r\n          break;\r\n      }\r\n      return jwb.renderer.render();\r\n    case GameScreen.TITLE:\r\n    case GameScreen.VICTORY:\r\n    case GameScreen.GAME_OVER:\r\n    case GameScreen.MINIMAP:\r\n      return Promise.resolve();\r\n    default:\r\n      throw `Invalid game screen ${state.screen}`;\r\n  }\r\n}\r\n\r\nconst _handleEnter = async () => {\r\n  const { state } = jwb;\r\n  const { playerUnit } = state;\r\n\r\n  switch (state.screen) {\r\n    case GameScreen.GAME: {\r\n      const { mapIndex } = state;\r\n      const map = state.getMap();\r\n      const { x, y }: Coordinates = playerUnit;\r\n      if (!map || (mapIndex === null)) {\r\n        throw 'Map is not loaded!';\r\n      }\r\n      const item = map.getItem({ x, y });\r\n      if (!!item) {\r\n        pickupItem(playerUnit, item);\r\n        map.removeItem({ x, y });\r\n      } else if (map.getTile({ x, y }).type === 'STAIRS'_DOWN) {\r\n        playSound(Sounds.DESCEND_STAIRS);\r\n        await loadMap(mapIndex + 1);\r\n      }\r\n      return TurnHandler.playTurn(null);\r\n    }\r\n    case GameScreen.INVENTORY: {\r\n      const { playerUnit } = state;\r\n      const { selectedItem } = playerUnit.inventory;\r\n\r\n      if (!!selectedItem) {\r\n        state.screen = GameScreen.GAME;\r\n        await useItem(playerUnit, selectedItem);\r\n        return jwb.renderer.render();\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n    case GameScreen.TITLE:\r\n      state.screen = GameScreen.GAME;\r\n      return startGame();\r\n    case GameScreen.VICTORY:\r\n    case GameScreen.GAME_OVER:\r\n      return returnToTitle();\r\n    default:\r\n      throw `Unknown game screen: ${state.screen}`;\r\n  }\r\n};\r\n\r\nconst _handleTab = async () => {\r\n  const { state, renderer } = jwb;\r\n\r\n  switch (state.screen) {\r\n    case GameScreen.INVENTORY:\r\n      state.screen = GameScreen.GAME;\r\n      break;\r\n    default:\r\n      state.screen = GameScreen.INVENTORY;\r\n      break;\r\n  }\r\n  return renderer.render();\r\n};\r\n\r\nconst _handleMap = async () => {\r\n  const { state, renderer } = jwb;\r\n\r\n  switch (state.screen) {\r\n    case GameScreen.MINIMAP:\r\n      state.screen = GameScreen.GAME;\r\n      break;\r\n    case GameScreen.GAME:\r\n    case GameScreen.INVENTORY:\r\n      state.screen = GameScreen.MINIMAP;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return renderer.render();\r\n};\r\n\r\nconst _handleAbility = async (command: KeyCommand) => {\r\n  const { renderer } = jwb;\r\n  const { playerUnit } = jwb.state;\r\n\r\n  // sketchy - recall KEY_1 = '1', etc.\r\n  // player abilities are indexed as (0 => attack, others => specials)\r\n  const index = parseInt(command.toString());\r\n  const ability = playerUnit.abilities[index];\r\n  if (playerUnit.getCooldown(ability) <= 0) {\r\n    jwb.state.queuedAbility = ability;\r\n    await renderer.render();\r\n  } else {\r\n    console.log(`${ability.name} is on cooldown: ${playerUnit.getCooldown(UnitAbility.HEAVY_ATTACK)}`);\r\n  }\r\n};\r\n\r\nfunction attachEvents() {\r\n  window.onkeydown = keyHandlerWrapper;\r\n}\r\n\r\nexport {\r\n  attachEvents\r\n};\r\n","import Unit from '../units/Unit';\r\nimport PlayerUnitController from '../units/controllers/PlayerUnitController';\r\n\r\nconst playTurn = async (playerUnitOrder: ((unit: Unit) => Promise<void>) | null) => {\r\n  const { playerUnit } = jwb.state;\r\n  const playerController = <PlayerUnitController>(playerUnit.controller);\r\n  playerController.queuedOrder = !!playerUnitOrder ? (() => playerUnitOrder(playerUnit)) : null;\r\n  return _update();\r\n};\r\n\r\nconst _update = async () => {\r\n  const { state, renderer } = jwb;\r\n  const { playerUnit } = state;\r\n  const map = state.getMap();\r\n\r\n  // make sure the player unit's update happens first\r\n  await playerUnit.update();\r\n  // other units are processed in unspecified order\r\n  for (const unit of map.units) {\r\n    if (unit !== playerUnit) {\r\n      await unit.update();\r\n    }\r\n  }\r\n\r\n  await renderer.render();\r\n  state.turn++;\r\n  state.messages = [];\r\n};\r\n\r\nexport default {\r\n  playTurn\r\n};\r\n","import GameState from './GameState';\r\nimport Unit from '../units/Unit';\r\nimport SpriteRenderer from '../graphics/SpriteRenderer';\r\nimport MapFactory from '../maps/MapFactory';\r\nimport UnitClass from '../units/UnitClass';\r\nimport Music from '../sounds/Music';\r\nimport TileSet from '../types/TileSet';\r\nimport { attachEvents } from './InputHandler';\r\nimport { GameScreen, MapLayout } from '../types/types';\r\nimport { contains, isTileRevealed } from '../maps/MapUtils';\r\nimport PlayerUnitController from '../units/controllers/PlayerUnitController';\r\n\r\n/*\r\n * This file defines functions that will be exported to the \"global namespace\" (window.jwb.*).\r\n */\r\n\r\nconst loadMap = async (index: number) => {\r\n  const { state } = jwb;\r\n  if (index >= state.maps.length) {\r\n    Music.stop();\r\n    jwb.state.screen = GameScreen.VICTORY;\r\n  } else {\r\n    state.mapIndex = index;\r\n    // TODO - this isn't memoized\r\n    const mapBuilder = state.maps[index]();\r\n    state.setMap(mapBuilder.build());\r\n  }\r\n};\r\n\r\nconst initialize = async () => {\r\n  // @ts-ignore\r\n  window.jwb = window.jwb || {};\r\n  jwb.renderer = new SpriteRenderer();\r\n  attachEvents();\r\n  await _initState();\r\n  Music.playFigure(Music.TITLE_THEME);\r\n  return jwb.renderer.render();\r\n};\r\n\r\nconst _initState = async () => {\r\n  const playerUnitController = new PlayerUnitController();\r\n  const playerUnit = new Unit(UnitClass.PLAYER, 'player', playerUnitController, 1, { x: 0, y: 0 });\r\n  jwb.state = new GameState(playerUnit, [\r\n    () => MapFactory.createRandomMap(MapLayout.ROOMS_AND_CORRIDORS, TileSet.DUNGEON, 1, 32, 24, 10, 5),\r\n    () => MapFactory.createRandomMap(MapLayout.ROOMS_AND_CORRIDORS, TileSet.DUNGEON, 2, 32, 24, 11, 4),\r\n    () => MapFactory.createRandomMap(MapLayout.ROOMS_AND_CORRIDORS, TileSet.DUNGEON, 3, 32, 24, 12, 3),\r\n    () => MapFactory.createRandomMap(MapLayout.BLOB, TileSet.CAVE, 4, 34, 25, 12, 3),\r\n    () => MapFactory.createRandomMap(MapLayout.BLOB, TileSet.CAVE, 5, 36, 26, 13, 3),\r\n    () => MapFactory.createRandomMap(MapLayout.BLOB, TileSet.CAVE, 6, 38, 27, 14, 3)\r\n  ]);\r\n};\r\n\r\nconst startGame = async () => {\r\n  await loadMap(0);\r\n  Music.stop();\r\n  Music.playFigure(Music.TITLE_THEME);\r\n  // Music.playSuite(randChoice([SUITE_1, SUITE_2, SUITE_3]));\r\n  return jwb.renderer.render();\r\n};\r\n\r\nconst returnToTitle = async () => {\r\n  await _initState(); // will set state.screen = TITLE\r\n  Music.stop();\r\n  Music.playFigure(Music.TITLE_THEME);\r\n  return jwb.renderer.render();\r\n};\r\n\r\n/**\r\n * Add any tiles the player can currently see to the map's revealed tiles list.\r\n */\r\nconst revealTiles = () => {\r\n  const { playerUnit } = jwb.state;\r\n  const map = jwb.state.getMap();\r\n\r\n  map.rooms.forEach(room => {\r\n    if (contains(room, playerUnit)) {\r\n      for (let y = room.top; y < room.top + room.height; y++) {\r\n        for (let x = room.left; x < room.left + room.width; x++) {\r\n          if (!isTileRevealed({ x, y })) {\r\n            map.revealedTiles.push({ x, y });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const radius = 2;\r\n\r\n  for (let y = playerUnit.y - radius; y <= playerUnit.y + radius; y++) {\r\n    for (let x = playerUnit.x - radius; x <= playerUnit.x + radius; x++) {\r\n      if (!isTileRevealed({ x, y })) {\r\n        map.revealedTiles.push({ x, y });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport {\r\n  initialize,\r\n  loadMap,\r\n  returnToTitle,\r\n  revealTiles,\r\n  startGame\r\n};\r\n","/*\r\n * This file defines additional functions that will be exported to the \"global namespace\" (window.jwb.*)\r\n * that are only intended for debugging purposes.\r\n */\r\n\r\nimport { GameScreen } from '../types/types';\r\n\r\nconst revealMap = async () => {\r\n  jwb.DEBUG = true;\r\n  return jwb.renderer.render();\r\n};\r\n\r\nconst killEnemies = async () => {\r\n  const map = jwb.state.getMap();\r\n  map.units = map.units.filter(u => u === jwb.state.playerUnit);\r\n  return jwb.renderer.render();\r\n};\r\n\r\nconst killPlayer = async () => {\r\n  const map = jwb.state.getMap();\r\n  const playerUnit = map.units.filter(u => u === jwb.state.playerUnit)[0];\r\n  await playerUnit.takeDamage(playerUnit.life);\r\n  return jwb.renderer.render();\r\n};\r\n\r\nconst renderMinimap = () => {\r\n  jwb.state.screen = GameScreen.MINIMAP;\r\n};\r\n\r\ntype DebugShape = {\r\n  revealMap: () => void,\r\n  killEnemies: () => void,\r\n  killPlayer: () => void\r\n};\r\n\r\nexport function initDebug() {\r\n  // @ts-ignore\r\n  window.jwb = window.jwb || {};\r\n  jwb.debug = jwb.debug || {\r\n    revealMap,\r\n    killEnemies,\r\n    killPlayer\r\n  };\r\n}\r\n\r\nexport default { initDebug };\r\n\r\nexport type { DebugShape };\r\n","import { applyTransparentColor, replaceColors } from './ImageUtils';\r\nimport Color from '../types/Color';\r\nimport ImageLoader from './ImageLoader';\r\n\r\n// Fonts are partial ASCII table consisting of the \"printable characters\", 32 to 126\r\nconst MIN_CHARACTER_CODE = 32;  // ' '\r\nconst MAX_CHARACTER_CODE = 126; // '~'\r\nconst NUM_CHARACTERS = MAX_CHARACTER_CODE - MIN_CHARACTER_CODE + 1;\r\nconst DEFAULT_CHAR = ' ';\r\n\r\nconst CHARACTERS = (() => {\r\n  const characters = [];\r\n  for (let c = MIN_CHARACTER_CODE; c <= MAX_CHARACTER_CODE; c++) {\r\n    characters.push(String.fromCodePoint(c));\r\n  }\r\n  return characters;\r\n})();\r\n\r\ninterface FontDefinition {\r\n  name: string,\r\n  src: string,\r\n  width: number,\r\n  height: number\r\n}\r\n\r\ninterface FontInstance extends FontDefinition {\r\n  imageMap: { [char: string]: ImageBitmap }\r\n}\r\n\r\nconst Fonts = {\r\n  PERFECT_DOS_VGA: <FontDefinition>{\r\n    name: 'PERFECT_DOS_VGA',\r\n    src: 'dos_perfect_vga_9x15_2',\r\n    width: 9,\r\n    height: 15\r\n  }\r\n};\r\n\r\nclass FontRenderer {\r\n  private readonly _loadedFonts: { [name: string]: FontInstance };\r\n  private readonly _imageMemos: { [key: string]: ImageBitmap };\r\n\r\n  constructor() {\r\n    this._loadedFonts = {};\r\n    this._imageMemos = {};\r\n  }\r\n\r\n  render(text: string, font: FontDefinition, color: Color): Promise<ImageBitmap> {\r\n    const key = this._getMemoKey(text, font, color);\r\n    if (!!this._imageMemos[key]) {\r\n      return Promise.resolve(this._imageMemos[key]);\r\n    }\r\n\r\n    const canvas = document.createElement('canvas');\r\n    const context : CanvasRenderingContext2D = <any>canvas.getContext('2d');\r\n    canvas.width = text.length * font.width;\r\n    canvas.height = font.height;\r\n\r\n    return this._loadFont(font)\r\n      .then(fontInstance => {\r\n        for (let i = 0; i < text.length; i++) {\r\n          const c = text.charAt(i);\r\n          const x = i * font.width;\r\n          const imageBitmap : ImageBitmap = fontInstance.imageMap[c] || fontInstance.imageMap[DEFAULT_CHAR]; // TODO hacky placeholder\r\n          context.drawImage(imageBitmap, x, 0, font.width, font.height);\r\n        }\r\n        return Promise.resolve();\r\n      })\r\n      .then(() => Promise.resolve(context.getImageData(0, 0, canvas.width, canvas.height)))\r\n      .then(imageData => replaceColors(imageData, { [Color.BLACK]: color }))\r\n      .then(imageData => createImageBitmap(imageData))\r\n      .then(imageBitmap => { this._imageMemos[key] = imageBitmap; return imageBitmap; });\r\n  }\r\n\r\n  private _loadFont(definition: FontDefinition): Promise<FontInstance> {\r\n    if (this._loadedFonts[definition.name]) {\r\n      return Promise.resolve(this._loadedFonts[definition.name]);\r\n    }\r\n\r\n    const width = NUM_CHARACTERS * definition.width;\r\n    return ImageLoader.loadImage(`fonts/${definition.src}`)\r\n      .then(imageData => createImageBitmap(imageData))\r\n      .then(imageBitmap => {\r\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = definition.height;\r\n        const context: CanvasRenderingContext2D = <any>canvas.getContext('2d');\r\n        context.drawImage(imageBitmap, 0, 0);\r\n        const imageMap: { [char: string]: ImageBitmap } = {};\r\n        const promises: Promise<any>[] = [];\r\n        CHARACTERS.forEach(c => {\r\n          promises.push(this._getCharacterData(definition, context, c.charCodeAt(0))\r\n            .then(imageData => createImageBitmap(imageData))\r\n            .then(imageBitmap => {\r\n              imageMap[c] = imageBitmap;\r\n            }));\r\n        });\r\n\r\n        return Promise.all(promises)\r\n          .then(() => {\r\n            const fontInstance: FontInstance = {\r\n              ...definition,\r\n              imageMap\r\n            };\r\n            this._loadedFonts[definition.name] = fontInstance;\r\n            return fontInstance;\r\n          });\r\n      });\r\n  }\r\n\r\n  private _getCharacterData(definition: FontDefinition, context: CanvasRenderingContext2D, char: number): Promise<ImageData> {\r\n    const offset = this._getCharOffset(char);\r\n    const imageData = context.getImageData(offset * definition.width, 0, definition.width, definition.height);\r\n    return applyTransparentColor(imageData, Color.WHITE);\r\n  }\r\n\r\n  private _getCharOffset(char: number) {\r\n    if (char >= MIN_CHARACTER_CODE && char <= MAX_CHARACTER_CODE) {\r\n      return char - MIN_CHARACTER_CODE;\r\n    }\r\n    throw `invalid character code ${char}`;\r\n  }\r\n\r\n  private _getMemoKey(text: string, font: FontDefinition, color: Color) {\r\n    return `${font.name}_${color}_${text}`;\r\n  }\r\n}\r\n\r\nexport default FontRenderer;\r\nexport { Fonts, FontDefinition };\r\n","import PaletteSwaps from '../types/PaletteSwaps';\r\nimport { applyTransparentColor, replaceColors } from './ImageUtils';\r\nimport ImageLoader from './ImageLoader';\r\n\r\ntype ImageDataFunc = (imageData: ImageData) => Promise<ImageData>;\r\n\r\nconst _loadOptional = async (filename: string): Promise<ImageData | null> => {\r\n  return ImageLoader.loadImage(filename)\r\n    .catch(e => null);\r\n};\r\n\r\nconst _loadFirst = async (filenames: string[]): Promise<ImageData> => {\r\n  const promises: Promise<ImageData | null>[] = filenames.map(filename => _loadOptional(filename));\r\n  const results = await Promise.all(promises);\r\n  const imageData = results.filter(p => !!p)[0];\r\n  if (!imageData) {\r\n    throw `Failed to load images: ${filenames}`;\r\n  }\r\n  return imageData;\r\n};\r\n\r\ntype Props = {\r\n  filename?: string,\r\n  filenames?: string[]\r\n  transparentColor: string,\r\n  paletteSwaps?: PaletteSwaps,\r\n  effects?: ImageDataFunc[]\r\n};\r\n\r\nclass ImageBuilder {\r\n  private readonly _props: Props;\r\n  /**\r\n   * @param effects A list of custom transformations to be applied to the image, in order\r\n   */\r\n  constructor(props: Props) {\r\n    this._props = props;\r\n  }\r\n\r\n  build = async (): Promise<ImageBitmap> => {\r\n    const { filename, transparentColor, paletteSwaps, effects } = this._props;\r\n    let filenames: string[];\r\n    if (this._props.filenames) {\r\n      filenames = this._props.filenames;\r\n    } else if (filename) {\r\n      filenames = [filename];\r\n    } else {\r\n      throw new Error('No filenames were specified!');\r\n    }\r\n\r\n    let imageData = await _loadFirst(filenames)\r\n      .then(imageData => applyTransparentColor(imageData, transparentColor))\r\n      .then(imageData => replaceColors(imageData, (paletteSwaps || {})));\r\n\r\n    for (const effect of (effects || [])) {\r\n      imageData = await effect(imageData);\r\n    }\r\n    return createImageBitmap(imageData);\r\n  };\r\n}\r\n\r\nexport default ImageBuilder;\r\n","type ImageCache = {\r\n  [filename: string]: Promise<ImageData>\r\n};\r\nconst CACHE: ImageCache = {};\r\n\r\nfunction _loadImage(filename: string): Promise<ImageData> {\r\n  return new Promise((resolve, reject) => {\r\n    const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n    canvas.style.display = 'none';\r\n\r\n    const img: HTMLImageElement = document.createElement('img');\r\n\r\n    img.addEventListener('load', () => {\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      const context = canvas.getContext('2d');\r\n      if (!context) {\r\n        throw 'Couldn\\'t get rendering context!';\r\n      }\r\n      context.drawImage(img, 0, 0);\r\n\r\n      const imageData = context.getImageData(0, 0, img.width, img.height);\r\n      if (img.parentElement) {\r\n        img.parentElement.removeChild(img);\r\n      }\r\n      if (canvas.parentElement) {\r\n        canvas.parentElement.removeChild(canvas);\r\n      }\r\n      resolve(imageData);\r\n    });\r\n\r\n    img.style.display = 'none';\r\n    img.onerror = () => {\r\n      reject(`Failed to load image ${img.src}`);\r\n    };\r\n    img.src = `dist/png/${filename}.png`;\r\n  });\r\n}\r\n\r\nfunction loadImage(filename: string): Promise<ImageData> {\r\n  if (CACHE[filename] != null) {\r\n    return CACHE[filename];\r\n  }\r\n  const image: Promise<ImageData> = _loadImage(filename);\r\n  CACHE[filename] = image;\r\n  return image;\r\n}\r\n\r\nexport default {\r\n  loadImage\r\n};\r\n","import PaletteSwaps from '../types/PaletteSwaps';\r\n\r\ntype RGB = [number, number, number];\r\n\r\nfunction applyTransparentColor(imageData: ImageData, transparentColor: string): Promise<ImageData> {\r\n  return new Promise(resolve => {\r\n    const [tr, tg, tb] = hex2rgb(transparentColor);\r\n    const array = new Uint8ClampedArray(imageData.data.length);\r\n    for (let i = 0; i < imageData.data.length; i += 4) {\r\n      // @ts-ignore\r\n      const [r, g, b, a] = imageData.data.slice(i, i + 4);\r\n      array[i] = r;\r\n      array[i + 1] = g;\r\n      array[i + 2] = b;\r\n      if (r === tr && g === tg && b === tb) {\r\n        array[i + 3] = 0;\r\n      } else {\r\n        array[i + 3] = a;\r\n      }\r\n    }\r\n    resolve(new ImageData(array, imageData.width, imageData.height));\r\n  });\r\n}\r\n\r\nfunction replaceColors(imageData: ImageData, colorMap: PaletteSwaps): Promise<ImageData> {\r\n  return new Promise(resolve => {\r\n    if (!colorMap) {\r\n      resolve(imageData);\r\n    }\r\n    const array = new Uint8ClampedArray(imageData.data.length);\r\n    const entries: [string, string][] = <[any,any][]>Object.entries(colorMap);\r\n\r\n    const srcRGB: { [hex: string]: RGB } = {};\r\n    const destRGB: { [hex: string]: RGB } = {};\r\n    entries.forEach(([srcColor, destColor]) => {\r\n      srcRGB[srcColor] = hex2rgb(srcColor);\r\n      destRGB[destColor] = hex2rgb(destColor);\r\n    });\r\n\r\n    for (let i = 0; i < imageData.data.length; i += 4) {\r\n      // @ts-ignore\r\n      const [r, g, b, a] = imageData.data.slice(i, i + 4);\r\n      array[i] = r;\r\n      array[i + 1] = g;\r\n      array[i + 2] = b;\r\n      array[i + 3] = a;\r\n      for (let j = 0; j < entries.length; j++) {\r\n        const [srcColor, destColor] = entries[j];\r\n        const [sr, sg, sb] = srcRGB[srcColor];\r\n        const [dr, dg, db] = destRGB[destColor];\r\n\r\n        if (r === sr && g === sg && b === sb) {\r\n          array[i] = dr;\r\n          array[i + 1] = dg;\r\n          array[i + 2] = db;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    resolve(new ImageData(array, imageData.width, imageData.height));\r\n  });\r\n}\r\n\r\n/**\r\n * Replace all non-transparent colors with the specified `color`.\r\n */\r\nfunction replaceAll(imageData: ImageData, color: string): Promise<ImageData> {\r\n  return new Promise(resolve => {\r\n    const [dr, dg, db] = hex2rgb(color);\r\n    const array = new Uint8ClampedArray(imageData.data.length);\r\n\r\n    for (let i = 0; i < imageData.data.length; i += 4) {\r\n      // @ts-ignore\r\n      const [r, g, b, a] = imageData.data.slice(i, i + 4);\r\n      array[i] = r;\r\n      array[i + 1] = g;\r\n      array[i + 2] = b;\r\n      array[i + 3] = a;\r\n\r\n      if (a > 0) {\r\n        array[i] = dr;\r\n        array[i + 1] = dg;\r\n        array[i + 2] = db;\r\n      }\r\n    }\r\n    resolve(new ImageData(array, imageData.width, imageData.height));\r\n  });\r\n}\r\n\r\n/**\r\n * Convert a hex string, e.g. '#00c0ff', to its equivalent RGB values, e.g. (0, 192, 255).\r\n * This implementation relies on the browser automatically doing this conversion when\r\n * an element's `backgroundColor` value is set.\r\n */\r\nfunction hex2rgb(hex: string): RGB {\r\n  const div = document.createElement('div');\r\n  div.style.backgroundColor = hex;\r\n  // @ts-ignore\r\n  return div.style.backgroundColor\r\n    .split(/[(),]/)\r\n    .map(c => parseInt(c))\r\n    .filter(c => c != null && !isNaN(c));\r\n}\r\n\r\nexport {\r\n  applyTransparentColor,\r\n  replaceColors,\r\n  replaceAll,\r\n  hex2rgb\r\n};\r\n","import SpriteRenderer from './SpriteRenderer';\r\nimport Color from '../types/Color';\r\nimport { Coordinates, TileType } from '../types/types';\r\nimport { coordinatesEquals, isTileRevealed } from '../maps/MapUtils';\r\n\r\nclass MinimapRenderer {\r\n  private readonly _canvas: HTMLCanvasElement;\r\n  private readonly _context: CanvasRenderingContext2D;\r\n\r\n  constructor() {\r\n    this._canvas = document.createElement('canvas');\r\n    this._canvas.width = SpriteRenderer.SCREEN_WIDTH;\r\n    this._canvas.height = SpriteRenderer.SCREEN_HEIGHT;\r\n    this._context = <any>this._canvas.getContext('2d');\r\n    this._context.imageSmoothingEnabled = false;\r\n  }\r\n\r\n  render(): Promise<ImageBitmap> {\r\n    this._context.fillStyle = Color.BLACK;\r\n    this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n\r\n    const map = jwb.state.getMap();\r\n    const m = Math.floor(Math.min(\r\n      this._canvas.width / map.width,\r\n      this._canvas.height / map.height\r\n    ));\r\n    for (let y = 0; y < map.height; y++) {\r\n      for (let x = 0; x < map.width; x++) {\r\n        this._context.fillStyle = this._getColor({ x, y });\r\n        this._context.fillRect(x * m, y * m, m, m);\r\n      }\r\n    }\r\n    const imageData = this._context.getImageData(0, 0, this._canvas.width, this._canvas.height);\r\n    return createImageBitmap(imageData);\r\n  }\r\n\r\n  private _getColor({ x, y }: Coordinates) {\r\n    if (coordinatesEquals(jwb.state.playerUnit, { x, y })) {\r\n      return Color.RED;\r\n    }\r\n\r\n    const map = jwb.state.getMap();\r\n    if (isTileRevealed({ x, y })) {\r\n      const tileType = map.getTile({ x, y }).type;\r\n      switch (tileType) {\r\n        case 'FLOOR':\r\n        case 'FLOOR'_HALL:\r\n        case 'STAIRS'_DOWN:\r\n          return Color.LIGHT_GRAY;\r\n        case 'WALL':\r\n        case 'WALL'_HALL:\r\n          return Color.DARK_GRAY;\r\n        case 'NONE':\r\n        case 'WALL'_TOP:\r\n        default:\r\n          return Color.BLACK;\r\n      }\r\n\r\n    } else {\r\n      return Color.BLACK;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MinimapRenderer;\r\n","import Sprite from './sprites/Sprite';\r\nimport Color from '../types/Color';\r\nimport MinimapRenderer from './MinimapRenderer';\r\nimport Renderer from './Renderer';\r\nimport FontRenderer, { FontDefinition, Fonts } from './FontRenderer';\r\nimport { coordinatesEquals, isTileRevealed } from '../maps/MapUtils';\r\nimport { Coordinates, Entity, GameScreen, ItemCategory, PromiseSupplier, Tile } from '../types/types';\r\nimport { revealTiles } from '../core/actions';\r\nimport { applyTransparentColor, replaceColors } from './ImageUtils';\r\nimport UnitAbility from '../units/UnitAbility';\r\nimport Equipment from '../items/equipment/Equipment';\r\nimport ImageLoader from './ImageLoader';\r\n\r\nconst TILE_WIDTH = 32;\r\nconst TILE_HEIGHT = 24;\r\n\r\nconst WIDTH = 20; // in tiles\r\nconst HEIGHT = 15; // in tiles\r\n\r\nconst SCREEN_WIDTH = 640;\r\nconst SCREEN_HEIGHT = 360;\r\n\r\nconst HUD_HEIGHT = 3 * TILE_HEIGHT;\r\nconst HUD_LEFT_WIDTH = 5 * TILE_WIDTH;\r\nconst HUD_RIGHT_WIDTH = 5 * TILE_WIDTH;\r\nconst HUD_MARGIN = 5;\r\nconst HUD_BORDER_MARGIN = 3;\r\n\r\nconst INVENTORY_LEFT = 2 * TILE_WIDTH;\r\nconst INVENTORY_TOP = 2 * TILE_HEIGHT;\r\nconst INVENTORY_WIDTH = 16 * TILE_WIDTH;\r\nconst INVENTORY_HEIGHT = 11 * TILE_HEIGHT;\r\nconst INVENTORY_MARGIN = 12;\r\n\r\nconst ABILITIES_PANEL_HEIGHT = 48;\r\nconst ABILITIES_OUTER_MARGIN = 13;\r\nconst ABILITIES_INNER_MARGIN = 10;\r\nconst ABILITY_ICON_WIDTH = 20;\r\nconst ABILITIES_Y_MARGIN = 4;\r\n\r\nconst LINE_HEIGHT = 16;\r\n\r\nconst GAME_OVER_FILENAME = 'gameover';\r\nconst TITLE_FILENAME = 'title';\r\nconst VICTORY_FILENAME = 'victory';\r\nconst HUD_FILENAME = 'HUD2';\r\nconst INVENTORY_BACKGROUND_FILENAME = 'inventory_background';\r\nconst SHADOW_FILENAME = 'shadow';\r\n\r\nclass SpriteRenderer implements Renderer {\r\n  static SCREEN_WIDTH = SCREEN_WIDTH;\r\n  static SCREEN_HEIGHT = SCREEN_HEIGHT;\r\n  private readonly _container: HTMLElement;\r\n  private readonly _bufferCanvas: HTMLCanvasElement;\r\n  private readonly _bufferContext: CanvasRenderingContext2D;\r\n  private readonly _canvas: HTMLCanvasElement;\r\n  private readonly _context: CanvasRenderingContext2D;\r\n  private readonly _fontRenderer: FontRenderer;\r\n\r\n  constructor() {\r\n    this._container = document.getElementById('container') as HTMLElement;\r\n    this._container.innerHTML = '';\r\n    this._bufferCanvas = document.createElement('canvas');\r\n    this._bufferCanvas.width = WIDTH * TILE_WIDTH;\r\n    this._bufferCanvas.height = HEIGHT * TILE_HEIGHT;\r\n    this._bufferContext = this._bufferCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this._bufferContext.imageSmoothingEnabled = false;\r\n    this._fontRenderer = new FontRenderer();\r\n    this._canvas = document.createElement('canvas');\r\n    this._canvas.width = WIDTH * TILE_WIDTH;\r\n    this._canvas.height = HEIGHT * TILE_HEIGHT;\r\n    this._context = this._canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this._bufferContext.imageSmoothingEnabled = false;\r\n    this._container.appendChild(this._canvas);\r\n  }\r\n\r\n  async render(): Promise<any> {\r\n    await this._renderScreen();\r\n    await this._renderBuffer();\r\n  }\r\n\r\n  private async _renderScreen() {\r\n    const { screen } = jwb.state;\r\n    switch (screen) {\r\n      case GameScreen.TITLE:\r\n        return this._renderSplashScreen(TITLE_FILENAME, 'PRESS ENTER TO BEGIN');\r\n      case GameScreen.GAME:\r\n        return this._renderGameScreen();\r\n      case GameScreen.INVENTORY:\r\n        return this._renderGameScreen()\r\n          .then(() => this._renderInventory());\r\n      case GameScreen.VICTORY:\r\n        return this._renderSplashScreen(VICTORY_FILENAME, 'PRESS ENTER TO PLAY AGAIN');\r\n      case GameScreen.GAME_OVER:\r\n        return this._renderSplashScreen(GAME_OVER_FILENAME, 'PRESS ENTER TO PLAY AGAIN');\r\n      case GameScreen.MINIMAP:\r\n        return this._renderMinimap();\r\n      default:\r\n        throw `Invalid screen ${screen}`;\r\n    }\r\n  }\r\n\r\n  private _renderBuffer(): Promise<any> {\r\n    return createImageBitmap(this._bufferContext.getImageData(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT))\r\n      .then(imageBitmap => this._context.drawImage(imageBitmap, 0, 0));\r\n  }\r\n\r\n  private async _renderGameScreen() {\r\n    revealTiles();\r\n    this._bufferContext.fillStyle = Color.BLACK;\r\n    this._bufferContext.fillRect(0, 0, this._bufferCanvas.width, this._bufferCanvas.height);\r\n\r\n    console.log('started rendering');\r\n    // can't pass direct references to the functions because `this` won't be defined\r\n    await this._renderTiles();\r\n    await this._renderItems();\r\n    await this._renderProjectiles();\r\n    console.log('rendering units');\r\n    await this._renderUnits();\r\n    console.log('rendered units');\r\n    await this._renderMessages();\r\n    await this._renderHUD();\r\n\r\n    console.log('done rendering');\r\n  }\r\n\r\n  private async _renderTiles() {\r\n    const map = jwb.state.getMap();\r\n    const promises: Promise<any>[] = [];\r\n    for (let y = 0; y < map.height; y++) {\r\n      for (let x = 0; x < map.width; x++) {\r\n        if (isTileRevealed({ x, y })) {\r\n          const tile = map.getTile({ x, y });\r\n          if (!!tile) {\r\n            promises.push(this._renderElement(tile, { x, y }));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private async _renderItems() {\r\n    const map = jwb.state.getMap();\r\n    const promises: Promise<any>[] = [];\r\n    for (let y = 0; y < map.height; y++) {\r\n      for (let x = 0; x < map.width; x++) {\r\n        if (isTileRevealed({ x, y })) {\r\n          const item = map.getItem({ x, y });\r\n          if (!!item) {\r\n            promises.push(\r\n              this._drawEllipse({ x, y }, Color.DARK_GRAY)\r\n                .then(() => this._renderElement(item, { x, y }))\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private async _renderProjectiles() {\r\n    const map = jwb.state.getMap();\r\n    const promises: Promise<any>[] = [];\r\n    for (let y = 0; y < map.height; y++) {\r\n      for (let x = 0; x < map.width; x++) {\r\n        if (isTileRevealed({ x, y })) {\r\n          const projectile = map.projectiles\r\n            .filter(p => coordinatesEquals(p, { x, y }))[0];\r\n          if (!!projectile) {\r\n            promises.push(this._renderElement(projectile, { x, y }));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private async _renderUnits() {\r\n    const { playerUnit } = jwb.state;\r\n    const map = jwb.state.getMap();\r\n    const promises: Promise<any>[] = [];\r\n\r\n    for (let y = 0; y < map.height; y++) {\r\n      for (let x = 0; x < map.width; x++) {\r\n        if (isTileRevealed({ x, y })) {\r\n          const unit = map.getUnit({ x, y });\r\n          if (!!unit) {\r\n            let shadowColor: Color;\r\n            if (unit === playerUnit) {\r\n              shadowColor = Color.GREEN;\r\n            } else {\r\n              shadowColor = Color.DARK_GRAY;\r\n            }\r\n\r\n            promises.push(new Promise<any>(async () => {\r\n              await this._drawEllipse({ x, y }, shadowColor);\r\n              await this._renderElement(unit, { x, y });\r\n              for (const item of unit.equipment.getValues()) {\r\n                await this._renderElement(item, { x, y });\r\n              }\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  /**\r\n   * @param color (in hex form)\r\n   */\r\n  private async _drawEllipse({ x, y }: Coordinates, color: Color) {\r\n    const { x: left, y: top } = this._gridToPixel({ x, y });\r\n    const imageData = await ImageLoader.loadImage(SHADOW_FILENAME)\r\n      .then(imageData => applyTransparentColor(imageData, Color.WHITE))\r\n      .then(imageData => replaceColors(imageData, { [Color.BLACK]: color }));\r\n    const imageBitmap = await createImageBitmap(imageData);\r\n    return this._bufferContext.drawImage(imageBitmap, left, top)\r\n  }\r\n\r\n  private async _renderInventory() {\r\n    const { playerUnit } = jwb.state;\r\n    const { inventory } = playerUnit;\r\n    const { _bufferCanvas, _bufferContext } = this;\r\n\r\n    const imageData = await ImageLoader.loadImage(INVENTORY_BACKGROUND_FILENAME);\r\n    const imageBitmap = await createImageBitmap(imageData);\r\n    await this._bufferContext.drawImage(imageBitmap, INVENTORY_LEFT, INVENTORY_TOP, INVENTORY_WIDTH, INVENTORY_HEIGHT);\r\n\r\n    // draw equipment\r\n    const equipmentLeft = INVENTORY_LEFT + INVENTORY_MARGIN;\r\n    const itemsLeft = (_bufferCanvas.width + INVENTORY_MARGIN) / 2;\r\n\r\n    const promises: Promise<any>[] = [];\r\n    promises.push(this._drawText('EQUIPMENT', Fonts.PERFECT_DOS_VGA, { x: _bufferCanvas.width / 4, y: INVENTORY_TOP + INVENTORY_MARGIN }, Color.WHITE, 'center'));\r\n    promises.push(this._drawText('INVENTORY', Fonts.PERFECT_DOS_VGA, { x: _bufferCanvas.width * 3 / 4, y: INVENTORY_TOP + INVENTORY_MARGIN }, Color.WHITE, 'center'));\r\n\r\n    // draw equipment items\r\n    // for now, just display them all in one list\r\n\r\n    let y = INVENTORY_TOP + 64;\r\n    for (const [slot, equipment] of playerUnit.equipment.getEntries()) {\r\n      promises.push(this._drawText(`${slot} - ${equipment.name}`, Fonts.PERFECT_DOS_VGA, { x: equipmentLeft, y }, Color.WHITE, 'left'));\r\n      y += LINE_HEIGHT;\r\n    }\r\n\r\n    // draw inventory categories\r\n    const inventoryCategories: ItemCategory[] = Object.values(ItemCategory);\r\n    const categoryWidth = 60;\r\n    const xOffset = 4;\r\n\r\n    for (let i = 0; i < inventoryCategories.length; i++) {\r\n      const x = itemsLeft + i * categoryWidth + (categoryWidth / 2) + xOffset;\r\n      const top = INVENTORY_TOP + 40;\r\n      promises.push(this._drawText(inventoryCategories[i], Fonts.PERFECT_DOS_VGA, { x, y: top }, Color.WHITE, 'center'));\r\n      if (inventoryCategories[i] === inventory.selectedCategory) {\r\n        _bufferContext.fillStyle = Color.WHITE;\r\n        _bufferContext.fillRect(x - (categoryWidth / 2) + 4, INVENTORY_TOP + 54, categoryWidth - 8, 1);\r\n      }\r\n    }\r\n\r\n    // draw inventory items\r\n    if (inventory.selectedCategory) {\r\n      const items = inventory.get(inventory.selectedCategory);\r\n      const x = itemsLeft + 8;\r\n      for (let i = 0; i < items.length; i++) {\r\n        const y = INVENTORY_TOP + 64 + LINE_HEIGHT * i;\r\n        let color;\r\n        if (items[i] === inventory.selectedItem) {\r\n          color = Color.YELLOW;\r\n        } else {\r\n          color = Color.WHITE;\r\n        }\r\n        promises.push(this._drawText(items[i].name, Fonts.PERFECT_DOS_VGA, { x, y }, color, 'left'));\r\n      }\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private _isPixelOnScreen({ x, y }: Coordinates): boolean {\r\n    return (\r\n      (x >= -TILE_WIDTH) &&\r\n      (x <= SCREEN_WIDTH + TILE_WIDTH) &&\r\n      (y >= -TILE_HEIGHT) &&\r\n      (y <= SCREEN_HEIGHT + TILE_HEIGHT)\r\n    );\r\n  }\r\n\r\n  private async _renderElement(element: (Entity | Tile | Equipment), { x, y }: Coordinates) {\r\n    const pixel: Coordinates = this._gridToPixel({ x, y });\r\n\r\n    if (this._isPixelOnScreen(pixel)) {\r\n      const { sprite } = element;\r\n      if (!!sprite) {\r\n        await this._drawSprite(sprite, pixel);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async _drawSprite(sprite: Sprite, { x, y }: Coordinates) {\r\n    const image = await sprite.getImage();\r\n    if (image) {\r\n      await this._bufferContext.drawImage(image, x + sprite.dx, y + sprite.dy);\r\n    }\r\n  }\r\n\r\n  private async _renderMessages() {\r\n    const { _bufferContext } = this;\r\n    const { messages } = jwb.state;\r\n    _bufferContext.fillStyle = Color.BLACK;\r\n    _bufferContext.strokeStyle = Color.BLACK;\r\n\r\n    const left = 0;\r\n    const top = 0;\r\n\r\n    for (let i = 0; i < messages.length; i++) {\r\n      const y = top + (LINE_HEIGHT * i);\r\n      _bufferContext.fillStyle = Color.BLACK;\r\n      _bufferContext.fillRect(left, y, SCREEN_WIDTH, LINE_HEIGHT);\r\n      await this._drawText(messages[i], Fonts.PERFECT_DOS_VGA, { x: left, y }, Color.WHITE, 'left');\r\n    }\r\n  }\r\n\r\n  private async _renderHUD() {\r\n    await this._renderHUDFrame();\r\n    await Promise.all([\r\n      this._renderHUDLeftPanel(),\r\n      this._renderHUDMiddlePanel(),\r\n      this._renderHUDRightPanel(),\r\n    ]);\r\n  }\r\n\r\n  private async _renderHUDFrame() {\r\n    const imageData = await ImageLoader.loadImage(HUD_FILENAME)\r\n      .then(imageData => applyTransparentColor(imageData, Color.WHITE));\r\n    const imageBitmap = await createImageBitmap(imageData);\r\n    await this._bufferContext.drawImage(imageBitmap, 0, SCREEN_HEIGHT - HUD_HEIGHT);\r\n  }\r\n\r\n  /**\r\n   * Renders the bottom-left area of the screen, showing information about the player\r\n   */\r\n  private async _renderHUDLeftPanel() {\r\n    const { playerUnit } = jwb.state;\r\n\r\n    const lines = [\r\n      playerUnit.name,\r\n      `Level ${playerUnit.level}`,\r\n      `Life: ${playerUnit.life}/${playerUnit.maxLife}`,\r\n      `Damage: ${playerUnit.getDamage()}`,\r\n    ];\r\n\r\n    const left = HUD_MARGIN;\r\n    const top = SCREEN_HEIGHT - HUD_HEIGHT + HUD_MARGIN;\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const y = top + (LINE_HEIGHT * i);\r\n      await this._drawText(lines[i], Fonts.PERFECT_DOS_VGA, { x: left, y }, Color.WHITE, 'left');\r\n    }\r\n  }\r\n\r\n  private async _renderHUDMiddlePanel() {\r\n    let left = HUD_LEFT_WIDTH + ABILITIES_OUTER_MARGIN;\r\n    const top = SCREEN_HEIGHT - ABILITIES_PANEL_HEIGHT + HUD_BORDER_MARGIN + ABILITIES_Y_MARGIN;\r\n    const { playerUnit } = jwb.state;\r\n\r\n    let keyNumber = 1;\r\n    for (let i = 0; i < playerUnit.abilities.length; i++) {\r\n      const ability = playerUnit.abilities[i];\r\n      if (!!ability.icon) {\r\n        await this._renderAbility(ability, left, top);\r\n        await this._drawText(`${keyNumber}`, Fonts.PERFECT_DOS_VGA, { x: left + 10, y: top + 24 }, Color.WHITE, 'center');\r\n        left += ABILITIES_INNER_MARGIN + ABILITY_ICON_WIDTH;\r\n        keyNumber++;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async _renderHUDRightPanel() {\r\n    const { mapIndex, playerUnit, turn } = jwb.state;\r\n\r\n    const left = SCREEN_WIDTH - HUD_RIGHT_WIDTH + HUD_MARGIN;\r\n    const top = SCREEN_HEIGHT - HUD_HEIGHT + HUD_MARGIN;\r\n\r\n    const lines = [\r\n      `Turn: ${turn}`,\r\n      `Floor: ${(mapIndex || 0) + 1}`,\r\n    ];\r\n\r\n    const experienceToNextLevel = playerUnit.experienceToNextLevel();\r\n    if (experienceToNextLevel !== null) {\r\n      lines.push(`Experience: ${playerUnit.experience}/${experienceToNextLevel}`);\r\n    }\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      let y = top + (LINE_HEIGHT * i);\r\n      await this._drawText(lines[i], Fonts.PERFECT_DOS_VGA, { x: left, y }, Color.WHITE, 'left');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return the top left pixel\r\n   */\r\n  private _gridToPixel({ x, y }: Coordinates): Coordinates {\r\n    const { playerUnit } = jwb.state;\r\n    return {\r\n      x: ((x - playerUnit.x) * TILE_WIDTH) + (SCREEN_WIDTH - TILE_WIDTH) / 2,\r\n      y: ((y - playerUnit.y) * TILE_HEIGHT) + (SCREEN_HEIGHT - TILE_HEIGHT) / 2\r\n    };\r\n  }\r\n\r\n  private async _renderSplashScreen(filename: string, text: string) {\r\n    const imageData = await ImageLoader.loadImage(filename);\r\n    const imageBitmap = await createImageBitmap(imageData);\r\n    await this._bufferContext.drawImage(imageBitmap, 0, 0, this._bufferCanvas.width, this._bufferCanvas.height);\r\n    await this._drawText(text, Fonts.PERFECT_DOS_VGA, { x: 320, y: 300 }, Color.WHITE, 'center');\r\n  }\r\n\r\n  private async _drawText(text: string, font: FontDefinition, { x, y }: Coordinates, color: Color, textAlign: 'left' | 'center' | 'right') {\r\n    const imageBitmap = await this._fontRenderer.render(text, font, color);\r\n    let left;\r\n    switch (textAlign) {\r\n      case 'left':\r\n        left = x;\r\n        break;\r\n      case 'center':\r\n        left = Math.floor(x - imageBitmap.width / 2);\r\n        break;\r\n      case 'right':\r\n        left = x + imageBitmap.width;\r\n        break;\r\n      default:\r\n        throw 'fux';\r\n    }\r\n    await this._bufferContext.drawImage(imageBitmap, left, y);\r\n  }\r\n\r\n  private async _renderMinimap() {\r\n    const minimapRenderer = new MinimapRenderer();\r\n    const bitmap = await minimapRenderer.render();\r\n    await this._bufferContext.drawImage(bitmap, 0, 0);\r\n  }\r\n\r\n  private async _renderAbility(ability: UnitAbility, left: number, top: number) {\r\n    let borderColor: Color;\r\n    const { queuedAbility, playerUnit } = jwb.state;\r\n    if (queuedAbility === ability) {\r\n      borderColor = Color.GREEN;\r\n    } else if (playerUnit.getCooldown(ability) === 0) {\r\n      borderColor = Color.WHITE;\r\n    } else {\r\n      borderColor = Color.DARK_GRAY;\r\n    }\r\n\r\n    const imageData = await ImageLoader.loadImage(`abilities/${ability.icon}`)\r\n      .then(image => replaceColors(image, { [Color.DARK_GRAY]: borderColor }));\r\n    const imageBitmap = await createImageBitmap(imageData);\r\n    await this._bufferContext.drawImage(imageBitmap, left, top);\r\n  }\r\n}\r\n\r\nexport default SpriteRenderer;\r\n","import Direction from '../../types/Direction';\r\nimport Unit from '../../units/Unit';\r\nimport { Activity, Coordinates, Projectile } from '../../types/types';\r\nimport { wait } from '../../utils/PromiseUtils';\r\nimport { createArrow } from '../../items/ProjectileFactory';\r\n\r\nconst FRAME_LENGTH = 150; // milliseconds\r\nconst PROJECTILE_FRAME_LENGTH = 50; // milliseconds\r\n\r\ntype UnitAnimationFrame = {\r\n  unit: Unit,\r\n  activity: Activity\r\n};\r\n\r\ntype AnimationFrame = {\r\n  units: UnitAnimationFrame[],\r\n  projectiles?: Projectile[]\r\n};\r\n\r\ntype Animation = {\r\n  frames: AnimationFrame[],\r\n  delay: number\r\n};\r\n\r\nfunction playAttackingAnimation(source: Unit, target: Unit): Promise<any> {\r\n  return _playAnimation({\r\n    frames: [\r\n      {\r\n        units: [\r\n          { unit: source, activity: Activity.ATTACKING },\r\n          { unit: target, activity: Activity.DAMAGED }\r\n        ],\r\n      },\r\n      {\r\n        units: [\r\n          { unit: source, activity: Activity.STANDING },\r\n          { unit: target, activity: Activity.STANDING }\r\n        ]\r\n      }\r\n    ],\r\n    delay: FRAME_LENGTH\r\n  });\r\n}\r\n\r\nfunction playArrowAnimation(source: Unit, direction: Direction, coordinatesList: Coordinates[], target: Unit | null): Promise<any> {\r\n  const frames: AnimationFrame[] = [];\r\n  // first frame\r\n  {\r\n    const frame: AnimationFrame = {\r\n      units: [{ unit: source, activity: Activity.SHOOTING }]\r\n    };\r\n    if (target) {\r\n      frame.units.push({ unit: target, activity: Activity.STANDING });\r\n    }\r\n    frames.push(frame);\r\n  }\r\n\r\n  // arrow movement frames\r\n  coordinatesList.forEach(({ x, y }: Coordinates) => {\r\n    const projectile = createArrow({ x, y }, direction);\r\n    const frame: AnimationFrame = {\r\n      units: [{ unit: source, activity: Activity.SHOOTING }],\r\n      projectiles: [projectile]\r\n    };\r\n    if (target) {\r\n      frame.units.push({ unit: target, activity: Activity.STANDING });\r\n    }\r\n\r\n    frames.push(frame);\r\n  });\r\n\r\n  // last frames\r\n  {\r\n    const frame: AnimationFrame = {\r\n      units: [\r\n        { unit: source, activity: Activity.STANDING }\r\n      ]\r\n    };\r\n    if (target) {\r\n      frame.units.push({ unit: target, activity: Activity.DAMAGED });\r\n    }\r\n\r\n    frames.push(frame);\r\n  }\r\n  {\r\n    const frame: AnimationFrame = {\r\n      units: [{ unit: source, activity: Activity.STANDING }]\r\n    };\r\n    if (target) {\r\n      frame.units.push({ unit: target, activity: Activity.STANDING });\r\n    }\r\n\r\n    frames.push(frame);\r\n  }\r\n\r\n  return _playAnimation({\r\n    frames,\r\n    delay: PROJECTILE_FRAME_LENGTH\r\n  });\r\n}\r\n\r\nfunction playFloorFireAnimation(source: Unit, targets: Unit[]): Promise<any> {\r\n  const frames: AnimationFrame[] = [];\r\n  for (let i = 0; i < targets.length; i++) {\r\n    const frame: UnitAnimationFrame[] = [];\r\n    frame.push({ unit: source, activity: Activity.STANDING });\r\n    for (let j = 0; j < targets.length; j++) {\r\n      const activity = (j === i) ? Activity.DAMAGED : Activity.STANDING;\r\n      frame.push({ unit: targets[j], activity });\r\n    }\r\n    frames.push({ units: frame });\r\n  }\r\n  // last frame (all standing)\r\n  const frame: UnitAnimationFrame[] = [];\r\n  frame.push({ unit: source, activity: Activity.STANDING });\r\n  for (let i = 0; i < targets.length; i++) {\r\n    frame.push({ unit: targets[i], activity: Activity.STANDING });\r\n  }\r\n  frames.push({ units: frame });\r\n  return _playAnimation({\r\n    frames,\r\n    delay: FRAME_LENGTH\r\n  });\r\n}\r\n\r\nconst _playAnimation = async (animation: Animation) => {\r\n  const { delay, frames } = animation;\r\n\r\n  for (let i = 0; i < frames.length; i++) {\r\n    const frame = frames[i];\r\n    const map = jwb.state.getMap();\r\n    if (!!frame.projectiles) {\r\n      map.projectiles.push(...frame.projectiles);\r\n    }\r\n    for (let j = 0; j < frame.units.length; j++) {\r\n      const { unit, activity } = frame.units[j];\r\n      unit.activity = activity;\r\n      await unit.sprite.getImage();\r\n    }\r\n    await jwb.renderer.render();\r\n    if (i < (frames.length - 1)) {\r\n      await wait(delay);\r\n    }\r\n\r\n    if (!!frame.projectiles) {\r\n      frame.projectiles.forEach(projectile => map.removeProjectile(projectile));\r\n    }\r\n  }\r\n};\r\n\r\nexport {\r\n  playAttackingAnimation,\r\n  playArrowAnimation,\r\n  playFloorFireAnimation\r\n};\r\n","import PaletteSwaps from '../../types/PaletteSwaps';\r\nimport { Offsets } from '../../types/types';\r\nimport Sprite from './Sprite';\r\n\r\ntype Props<T> = {\r\n  offsets: Offsets,\r\n  paletteSwaps: PaletteSwaps,\r\n  imageMap: Record<string, ImageBitmap>\r\n  keyFunction: (t: T) => string\r\n};\r\n\r\nclass DynamicSprite<T> extends Sprite {\r\n  target: T | null;\r\n  private readonly paletteSwaps: PaletteSwaps;\r\n  private readonly imageMap: Record<string, ImageBitmap>;\r\n  private readonly keyFunction: (t: T) => string;\r\n\r\n  constructor({ offsets, paletteSwaps, imageMap, keyFunction }: Props<T>) {\r\n    super(offsets);\r\n    this.target = null;\r\n    this.paletteSwaps = paletteSwaps;\r\n    this.imageMap = imageMap;\r\n    this.keyFunction = keyFunction;\r\n  }\r\n\r\n  /**\r\n   * @override {@link Sprite#getImage}\r\n   */\r\n  getImage = (): ImageBitmap => {\r\n    const frameKey = this.keyFunction(this.target!!);\r\n    return this.imageMap[frameKey];\r\n  };\r\n}\r\n\r\nexport default DynamicSprite;\r\n","/**\r\n * Note: It's expected that a separate Sprite instance will be created\r\n * per entity, and frame caching will be handled... somewhere else\r\n */\r\nimport { Offsets } from '../../types/types';\r\n\r\nabstract class Sprite {\r\n  dx: number;\r\n  dy: number;\r\n\r\n  protected constructor({ dx, dy }: Offsets) {\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n  }\r\n\r\n  abstract getImage(): ImageBitmap | null;\r\n}\r\n\r\nexport default Sprite;\r\n","import Color from '../../types/Color';\r\nimport Direction from '../../types/Direction';\r\nimport PaletteSwaps from '../../types/PaletteSwaps';\r\nimport { Activity } from '../../types/types';\r\nimport { fillTemplate } from '../../utils/TemplateUtils';\r\nimport ImageBuilder from '../ImageBuilder';\r\nimport { replaceAll } from '../ImageUtils';\r\nimport DynamicSprite from './DynamicSprite';\r\nimport Sprite from './Sprite';\r\nimport Unit from '../../units/Unit';\r\nimport DynamicSpriteModel from './DynamicSpriteModel';\r\nimport StaticSprite from './StaticSprite';\r\nimport StaticSpriteModel from './StaticSpriteModel';\r\nimport Equipment from '../../items/equipment/Equipment';\r\n\r\ntype SpriteCategory = 'units' | 'equipment' | 'static';\r\n\r\nconst createStaticSprite = async (filename: string, paletteSwaps: PaletteSwaps = {}): Promise<Sprite> => {\r\n  const model: StaticSpriteModel = await loadSpriteModel(filename, 'static');\r\n  const { offsets, transparentColor } = model;\r\n  const image = await new ImageBuilder({\r\n    filename,\r\n    paletteSwaps,\r\n    transparentColor\r\n  }).build();\r\n  return new StaticSprite(image, offsets);\r\n};\r\n\r\nconst createUnitSprite = async (spriteName: string, paletteSwaps: PaletteSwaps = {}): Promise<DynamicSprite<Unit>> => {\r\n  const spriteModel: DynamicSpriteModel = await loadSpriteModel(spriteName, 'units');\r\n  const imageMap = await loadAnimations(spriteModel, paletteSwaps);\r\n  const keyFunction = (unit: Unit) => `${unit.activity}_${unit.direction}`;\r\n\r\n  return new DynamicSprite<Unit>({\r\n    paletteSwaps,\r\n    imageMap,\r\n    offsets:\r\n    spriteModel.offsets,\r\n    keyFunction\r\n  });\r\n};\r\n\r\nconst createEquipmentSprite = async (spriteName: string, paletteSwaps: PaletteSwaps = {}) => {\r\n  const spriteModel: DynamicSpriteModel = await loadSpriteModel(spriteName, 'equipment');\r\n  const imageMap = await loadAnimations(spriteModel, paletteSwaps);\r\n  const keyFunction = (equipment: Equipment) => `${equipment.unit!!.activity}_${equipment.unit!!.direction}`;\r\n\r\n  return new DynamicSprite<Equipment>({\r\n    paletteSwaps,\r\n    imageMap,\r\n    offsets:\r\n    spriteModel.offsets,\r\n    keyFunction\r\n  });\r\n};\r\n\r\n/**\r\n * TODO - these aren't in JSON but hardcoded here\r\n */\r\nconst createProjectileSprite = async (spriteName: string, direction: Direction, paletteSwaps: PaletteSwaps={}) => {\r\n  const filename = `${spriteName}/${spriteName}_${direction}_1`;\r\n  const offsets = { dx: 0, dy: -8 };\r\n  const image = await new ImageBuilder({\r\n    filename,\r\n    paletteSwaps,\r\n    transparentColor: Color.WHITE\r\n  }).build();\r\n  return new StaticSprite(image, offsets);\r\n};\r\n\r\nconst loadAnimations = async (spriteModel: DynamicSpriteModel, paletteSwaps: PaletteSwaps): Promise<Record<string, ImageBitmap>> => {\r\n  const imageMap: Record<string, ImageBitmap> = {};\r\n  for (const [animationName, animation] of Object.entries(spriteModel.animations)) {\r\n    for (const frame of animation.frames) {\r\n      for (const direction of Direction.values()) {\r\n        const variables = {\r\n          sprite: spriteModel.name,\r\n          activity: animationName,\r\n          direction,\r\n          number: frame.number\r\n        };\r\n\r\n        const patterns = animation.pattern ? [animation.pattern]\r\n          : spriteModel.patterns ? spriteModel.patterns\r\n          : spriteModel.pattern ? [spriteModel.pattern]\r\n          : [];\r\n\r\n        const filenames = patterns.map(pattern => `units/${spriteModel.name}/${pattern}`)\r\n          .map(pattern => fillTemplate(pattern, variables));\r\n\r\n        const effects = (animationName === Activity.DAMAGED.toString())\r\n          ? [(img: ImageData) => replaceAll(img, Color.WHITE)]\r\n          : [];\r\n\r\n        const image: ImageBitmap = await new ImageBuilder({\r\n          filenames,\r\n          transparentColor: Color.WHITE,\r\n          paletteSwaps,\r\n          effects\r\n        }).build();\r\n\r\n        const frameKey = `${animationName}_${direction}`;\r\n        imageMap[frameKey] = image;\r\n      }\r\n    }\r\n  }\r\n  return imageMap;\r\n};\r\n\r\nconst loadSpriteModel = async <T> (name: string, category: SpriteCategory): Promise<T> => {\r\n  return (await import(`../../../../data/sprites/${category}/${name}.json`)).default;\r\n};\r\n\r\nexport default {\r\n  createStaticSprite,\r\n  createUnitSprite,\r\n  createEquipmentSprite,\r\n  createProjectileSprite\r\n};\r\n","import { Offsets } from '../../types/types';\r\nimport Sprite from './Sprite';\r\n\r\nclass StaticSprite extends Sprite {\r\n  private readonly image: ImageBitmap;\r\n\r\n  constructor(image: ImageBitmap, offsets: Offsets) {\r\n    super(offsets);\r\n    this.image = image;\r\n  }\r\n\r\n  /**\r\n   * @override {@link Sprite#getImage}\r\n   */\r\n  getImage = () => this.image;\r\n}\r\n\r\nexport default StaticSprite;\r\n","import { ItemCategory } from '../types/types';\r\nimport Unit from '../units/Unit';\r\n\r\nclass InventoryItem {\r\n  readonly name: string;\r\n  readonly category: ItemCategory;\r\n  private readonly onUse: (unit: Unit) => Promise<any>;\r\n\r\n  constructor(name: string, category: ItemCategory, onUse: (item: InventoryItem, unit: Unit) => Promise<void>) {\r\n    this.name = name;\r\n    this.category = category;\r\n    this.onUse = (unit: Unit) => onUse(this, unit);\r\n  }\r\n\r\n  use(unit: Unit): Promise<any> {\r\n    return this.onUse(unit);\r\n  }\r\n}\r\n\r\nexport default InventoryItem;\r\n","import { ItemCategory } from '../types/types';\r\nimport InventoryItem from './InventoryItem';\r\n\r\nconst categories: ItemCategory[] = Object.values(ItemCategory);\r\n\r\n/**\r\n * Contains information about all items held by a particular unit, grouped by category,\r\n * as well as data about the selected item/category in the inventory menu\r\n * (although this is only applicable to the player unit)\r\n */\r\nclass InventoryMap {\r\n  private readonly _map: { [category in ItemCategory]: InventoryItem[] };\r\n  selectedCategory: ItemCategory;\r\n  selectedItem: InventoryItem | null;\r\n\r\n  constructor() {\r\n    // @ts-ignore\r\n    this._map = {};\r\n    for (const category of categories) {\r\n      this._map[<ItemCategory>category] = [];\r\n    }\r\n    this.selectedCategory = categories[0];\r\n    this.selectedItem = null;\r\n  }\r\n\r\n  add(item: InventoryItem) {\r\n    this._map[item.category].push(item);\r\n    if (this.selectedCategory === item.category && this.selectedItem === null) {\r\n      this.selectedItem = item;\r\n    }\r\n  }\r\n\r\n  remove(item: InventoryItem) {\r\n    const items = this._map[item.category];\r\n    const index = items.indexOf(item);\r\n    items.splice(index, 1);\r\n    if (this.selectedItem === item) {\r\n      this.selectedItem = items[index % items.length] || null;\r\n    }\r\n  }\r\n\r\n  nextCategory() {\r\n    const index = categories.indexOf(this.selectedCategory);\r\n    this.selectedCategory = categories[(index + 1) % categories.length];\r\n    this.selectedItem = this._map[this.selectedCategory][0] || null;\r\n  }\r\n\r\n  previousCategory() {\r\n    const index = categories.indexOf(this.selectedCategory);\r\n    this.selectedCategory = categories[(index - 1 + categories.length) % categories.length];\r\n    this.selectedItem = this._map[this.selectedCategory][0] || null;\r\n  }\r\n\r\n  get(category: ItemCategory): InventoryItem[] {\r\n    return [...this._map[category]];\r\n  }\r\n\r\n  nextItem() {\r\n    const items = this._map[this.selectedCategory];\r\n    if (items.length > 0 && this.selectedItem !== null) {\r\n      const index = items.indexOf(this.selectedItem);\r\n      this.selectedItem = items[(index + 1) % items.length];\r\n    }\r\n  }\r\n\r\n  previousItem() {\r\n    const items = this._map[this.selectedCategory];\r\n    if (items.length > 0 && this.selectedItem !== null) {\r\n      const index = items.indexOf(this.selectedItem);\r\n      this.selectedItem = items[(index - 1 + items.length) % items.length];\r\n    }\r\n  }\r\n}\r\n\r\nexport default InventoryMap;","import Sounds from '../sounds/Sounds';\r\nimport InventoryItem from './InventoryItem';\r\nimport Unit from '../units/Unit';\r\nimport MapItem from './MapItem';\r\nimport SpriteFactory from '../graphics/sprites/SpriteFactory';\r\nimport { randChoice, randInt } from '../utils/random';\r\nimport EquipmentClass from './equipment/EquipmentClass';\r\nimport { ItemCategory, Coordinates } from '../types/types';\r\nimport { playSound } from '../sounds/SoundFX';\r\nimport { playFloorFireAnimation } from '../graphics/animations/Animations';\r\nimport { equipItem } from './ItemUtils';\r\n\r\ntype ItemProc = (item: InventoryItem, unit: Unit) => Promise<void>;\r\n\r\nconst createPotion = (lifeRestored: number): InventoryItem => {\r\n  const onUse: ItemProc = async (item: InventoryItem, unit: Unit) => {\r\n    playSound(Sounds.USE_POTION);\r\n    const prevLife = unit.life;\r\n    unit.life = Math.min(unit.life + lifeRestored, unit.maxLife);\r\n    jwb.state.messages.push(`${unit.name} used ${item.name} and gained ${(unit.life - prevLife)} life.`);\r\n  };\r\n\r\n  return new InventoryItem('Potion', ItemCategory.POTION, onUse);\r\n};\r\n\r\nconst createScrollOfFloorFire = async (damage: number): Promise<InventoryItem> => {\r\n  const onUse: ItemProc = async (item, unit): Promise<void> => {\r\n    const map = jwb.state.getMap();\r\n\r\n    const adjacentUnits: Unit[] = map.units.filter(u => {\r\n      const dx = unit.x - u.x;\r\n      const dy = unit.y - u.y;\r\n      return ([-1,0,1].indexOf(dx) > -1)\r\n        && ([-1,0,1].indexOf(dy) > -1)\r\n        && !(dx === 0 && dy === 0);\r\n    });\r\n\r\n    await playFloorFireAnimation(unit, adjacentUnits);\r\n\r\n    for (const adjacentUnit of adjacentUnits) {\r\n      await adjacentUnit.takeDamage(damage, unit);\r\n    }\r\n  };\r\n\r\n  return new InventoryItem('Scroll of Floor Fire', ItemCategory.SCROLL, onUse);\r\n};\r\n\r\nconst _createMapEquipment = async (equipmentClass: EquipmentClass, { x, y }: Coordinates): Promise<MapItem> => {\r\n  const sprite = await SpriteFactory.createStaticSprite(equipmentClass.mapIcon, equipmentClass.paletteSwaps);\r\n  const inventoryItem: InventoryItem = await _createInventoryWeapon(equipmentClass);\r\n  return new MapItem({ x, y }, equipmentClass.char, sprite, inventoryItem);\r\n};\r\n\r\nfunction _createInventoryWeapon(equipmentClass: EquipmentClass): InventoryItem {\r\n  const onUse: ItemProc = (item: InventoryItem, unit: Unit) => {\r\n    return equipItem(item, equipmentClass, unit);\r\n  };\r\n  return new InventoryItem(equipmentClass.name, equipmentClass.itemCategory, onUse);\r\n}\r\n\r\ntype MapItemSupplier = ({ x, y }: Coordinates) => Promise<MapItem>;\r\n\r\nfunction _getItemSuppliers(level: number): MapItemSupplier[] {\r\n  const createMapPotion: MapItemSupplier = async ({ x, y }: Coordinates) => {\r\n    const sprite = await SpriteFactory.createStaticSprite('map_potion');\r\n    const inventoryItem = createPotion(40);\r\n    return new MapItem({ x, y }, 'K', sprite, inventoryItem);\r\n  };\r\n\r\n  const createFloorFireScroll = async ({ x, y }: Coordinates) => {\r\n    const sprite = await SpriteFactory.createStaticSprite('map_scroll');\r\n    const inventoryItem = await createScrollOfFloorFire(80);\r\n    return new MapItem({ x, y }, 'K', sprite, inventoryItem);\r\n  };\r\n\r\n  return [createMapPotion, createFloorFireScroll];\r\n}\r\n\r\nconst _getEquipmentSuppliers = (level: number): MapItemSupplier[] => {\r\n  return EquipmentClass.values()\r\n    .filter(equipmentClass => level >= equipmentClass.minLevel)\r\n    .filter(equipmentClass => level <= equipmentClass.maxLevel)\r\n    .map(equipmentClass => ({ x, y }) => _createMapEquipment(equipmentClass, { x, y }));\r\n};\r\n\r\nconst createRandomItem = async ({ x, y }: Coordinates, level: number): Promise<MapItem> => {\r\n  let supplier: MapItemSupplier;\r\n  if (randInt(0, 2) == 0) {\r\n    supplier = randChoice(_getItemSuppliers(level))!!;\r\n  } else {\r\n    supplier = randChoice(_getEquipmentSuppliers(level))!!;\r\n  }\r\n  return supplier({ x, y });\r\n};\r\n\r\nexport default {\r\n  createRandomItem\r\n};\r\n","import Unit from '../units/Unit';\r\nimport MapItem from './MapItem';\r\nimport InventoryItem from './InventoryItem';\r\nimport { playSound } from '../sounds/SoundFX';\r\nimport Sounds from '../sounds/Sounds';\r\nimport EquipmentClass from './equipment/EquipmentClass';\r\nimport Equipment from './equipment/Equipment';\r\n\r\nfunction pickupItem(unit: Unit, mapItem: MapItem) {\r\n  const { state } = jwb;\r\n  const { inventoryItem } = mapItem;\r\n  unit.inventory.add(inventoryItem);\r\n  state.messages.push(`Picked up a ${inventoryItem.name}.`);\r\n  playSound(Sounds.PICK_UP_ITEM);\r\n}\r\n\r\nfunction useItem(unit: Unit, item: InventoryItem): Promise<void> {\r\n  return item.use(unit)\r\n    .then(() => unit.inventory.remove(item));\r\n}\r\n\r\nfunction equipItem(item: InventoryItem, equipmentClass: EquipmentClass, unit: Unit): Promise<void> {\r\n  return new Promise(resolve => {\r\n    const equipment: Equipment = new Equipment(equipmentClass, item);\r\n    unit.equipment.add(equipment);\r\n    equipment.attach(unit);\r\n    resolve();\r\n  });\r\n}\r\n\r\nexport {\r\n  pickupItem,\r\n  useItem,\r\n  equipItem\r\n};\r\n","import InventoryItem from './InventoryItem';\r\nimport Sprite from '../graphics/sprites/Sprite';\r\nimport { Coordinates, Entity } from '../types/types';\r\n\r\nclass MapItem implements Entity {\r\n  x: number;\r\n  y: number;\r\n  readonly char: string;\r\n  readonly sprite: Sprite;\r\n  inventoryItem: InventoryItem;\r\n\r\n  constructor({ x, y }: Coordinates, char: string, sprite: Sprite, inventoryItem: InventoryItem) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.char = char;\r\n    this.sprite = sprite;\r\n    this.inventoryItem = inventoryItem;\r\n  }\r\n}\r\n\r\nexport default MapItem;","import Direction from '../types/Direction';\r\nimport { Coordinates, Projectile } from '../types/types';\r\nimport SpriteFactory from '../graphics/sprites/SpriteFactory';\r\n\r\nfunction createArrow({ x, y }: Coordinates, direction: Direction): Projectile {\r\n  return {\r\n    x,\r\n    y,\r\n    direction,\r\n    sprite: SpriteFactory.ARROW(direction, {}),\r\n    char: 'x'\r\n  };\r\n}\r\n\r\nexport {\r\n  createArrow\r\n};\r\n","import InventoryItem from '../InventoryItem';\r\nimport Unit from '../../units/Unit';\r\nimport EquipmentClass from './EquipmentClass';\r\nimport { EquipmentSlot } from '../../types/types';\r\nimport Sprite from '../../graphics/sprites/Sprite';\r\n\r\nclass Equipment {\r\n  readonly inventoryItem: InventoryItem | null;\r\n  readonly damage?: number;\r\n  readonly sprite: Sprite;\r\n  readonly slot: EquipmentSlot;\r\n  readonly name: string;\r\n  unit?: Unit;\r\n\r\n  constructor(equipmentClass: EquipmentClass, sprite: Sprite, inventoryItem: InventoryItem | null) {\r\n    this.name = equipmentClass.name;\r\n    this.slot = equipmentClass.slot;\r\n    this.inventoryItem = inventoryItem;\r\n    this.damage = equipmentClass.damage;\r\n    this.sprite = sprite;\r\n  }\r\n\r\n  attach(unit: Unit) {\r\n    this.unit = unit;\r\n  }\r\n}\r\n\r\nexport default Equipment;\r\n","import bronze_sword from '../../../../data/equipment/bronze_sword.json';\r\nimport iron_sword from '../../../../data/equipment/iron_sword.json';\r\nimport steel_sword from '../../../../data/equipment/steel_sword.json';\r\nimport fire_sword from '../../../../data/equipment/fire_sword.json';\r\nimport short_bow from '../../../../data/equipment/short_bow.json';\r\nimport long_bow from '../../../../data/equipment/long_bow.json';\r\nimport bronze_chain_mail from '../../../../data/equipment/bronze_chain_mail.json';\r\nimport iron_chain_mail from '../../../../data/equipment/iron_chain_mail.json';\r\nimport iron_helmet from '../../../../data/equipment/iron_helmet.json';\r\nimport PaletteSwaps from '../../types/PaletteSwaps';\r\nimport { EquipmentSlot, ItemCategory } from '../../types/types';\r\n\r\ninterface EquipmentClass {\r\n  readonly name: string,\r\n  readonly sprite: string,\r\n  readonly mapIcon: string,\r\n  readonly itemCategory: ItemCategory,\r\n  readonly slot: EquipmentSlot,\r\n  readonly char: string,\r\n  readonly paletteSwaps: PaletteSwaps,\r\n  readonly damage?: number,\r\n  // TODO move these somewhere else - just used to control item spawns\r\n  readonly minLevel: number,\r\n  readonly maxLevel: number,\r\n}\r\n\r\nfunction _load(json: any): EquipmentClass {\r\n  // ugh\r\n  return {\r\n    ...json,\r\n    // We're using \"friendly\" color names, convert them to hex now\r\n    paletteSwaps: PaletteSwaps.create(json.paletteSwaps),\r\n  };\r\n}\r\n\r\nconst _map: Record<string, EquipmentClass> = {\r\n  bronze_sword: _load(bronze_sword),\r\n  iron_sword: _load(iron_sword),\r\n  steel_sword: _load(steel_sword),\r\n  fire_sword: _load(fire_sword),\r\n  short_bow: _load(short_bow),\r\n  long_bow: _load(long_bow),\r\n  bronze_chain_mail: _load(bronze_chain_mail),\r\n  iron_chain_mail: _load(iron_chain_mail),\r\n  iron_helmet: _load(iron_helmet)\r\n};\r\n\r\nnamespace EquipmentClass {\r\n  export const forName = (name: string): EquipmentClass => {\r\n    if (_map.hasOwnProperty(name)) {\r\n      return _load(_map[name]);\r\n    }\r\n    throw `Unknown equipment \"${name}\"!`;\r\n  }\r\n\r\n  export const values = (): EquipmentClass[] => Object.values(_map);\r\n}\r\n\r\nexport default EquipmentClass;\r\n","import { EquipmentSlot } from '../../types/types';\r\nimport Equipment from './Equipment';\r\n\r\n/**\r\n * Represent's a unit's equipment, mapped by slot.\r\n */\r\nclass EquipmentMap {\r\n  private readonly _map: { [slot in EquipmentSlot]?: Equipment };\r\n\r\n  constructor() {\r\n    this._map = {};\r\n  }\r\n\r\n  add(item: Equipment) {\r\n    this._map[item.slot] = item;\r\n  }\r\n\r\n  remove(item: Equipment) {\r\n    this._map[item.slot] = undefined;\r\n  }\r\n\r\n  get(category: EquipmentSlot): Equipment | null {\r\n    return this._map[category] || null;\r\n  }\r\n\r\n  getEntries(): [EquipmentSlot, Equipment][] {\r\n    return [...(<[EquipmentSlot, Equipment][]>Object.entries(this._map))];\r\n  }\r\n\r\n  getValues(): Equipment[] {\r\n    return [...(<Equipment[]>Object.values(this._map))];\r\n  }\r\n}\r\n\r\nexport default EquipmentMap;","import { Coordinates, Room, Tile } from '../types/types';\r\nimport Unit from '../units/Unit';\r\nimport MapItem from '../items/MapItem';\r\nimport MapInstance from './MapInstance';\r\n\r\nclass MapBuilder {\r\n  private readonly level: number;\r\n  private readonly width: number;\r\n  private readonly height: number;\r\n  private readonly tiles: Tile[][];\r\n  private readonly rooms: Room[];\r\n  private readonly playerUnitLocation: Coordinates;\r\n  private readonly enemyUnitLocations: Coordinates[];\r\n  private readonly itemLocations: Coordinates[];\r\n  private readonly enemyUnitSupplier: ({ x, y }: Coordinates, level: number) => Promise<Unit>;\r\n  private readonly itemSupplier: ({ x, y }: Coordinates, level: number) => Promise<MapItem>;\r\n\r\n  constructor(\r\n    level: number,\r\n    width: number,\r\n    height: number,\r\n    tiles: Tile[][],\r\n    rooms: Room[],\r\n    playerUnitLocation: Coordinates,\r\n    enemyUnitLocations: Coordinates[],\r\n    enemyUnitSupplier: ({ x, y }: Coordinates, level: number) => Promise<Unit>,\r\n    itemLocations: Coordinates[],\r\n    itemSupplier: ({ x, y }: Coordinates, level: number) => Promise<MapItem>\r\n  ) {\r\n    this.level = level;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.tiles = tiles;\r\n    this.rooms = rooms;\r\n    this.playerUnitLocation = playerUnitLocation;\r\n    this.enemyUnitLocations = enemyUnitLocations;\r\n    this.itemLocations = itemLocations;\r\n    this.enemyUnitSupplier = enemyUnitSupplier;\r\n    this.itemSupplier = itemSupplier;\r\n  }\r\n\r\n  build = async (): Promise<MapInstance> => {\r\n    const { playerUnit } = jwb.state;\r\n    [playerUnit.x, playerUnit.y] = [this.playerUnitLocation.x, this.playerUnitLocation.y];\r\n    const units = [playerUnit];\r\n    for (const { x, y } of this.enemyUnitLocations) {\r\n      const enemyUnit = await this.enemyUnitSupplier({ x, y }, this.level);\r\n      units.push(enemyUnit);\r\n    }\r\n    const items: MapItem[] = [];\r\n    for (const { x, y } of this.itemLocations) {\r\n      const item = await this.itemSupplier({ x, y }, this.level);\r\n      items.push(item);\r\n    }\r\n\r\n    return new MapInstance(\r\n      this.width,\r\n      this.height,\r\n      this.tiles,\r\n      this.rooms,\r\n      units,\r\n      items\r\n    );\r\n  };\r\n}\r\n\r\nexport default MapBuilder;\r\n","import { TileSet } from '../types/TileFactory';\r\nimport MapBuilder from './MapBuilder';\r\nimport ItemFactory from '../items/ItemFactory';\r\nimport UnitFactory from '../units/UnitFactory';\r\nimport BlobDungeonGenerator from './generation/BlobDungeonGenerator';\r\nimport DungeonGenerator from './generation/DungeonGenerator';\r\nimport { MapLayout } from '../types/types';\r\nimport RoomCorridorDungeonGenerator2 from './generation/RoomCorridorDungeonGenerator2';\r\n\r\nfunction createRandomMap(\r\n  mapLayout: MapLayout,\r\n  tileSet: TileSet,\r\n  level: number,\r\n  width: number,\r\n  height: number,\r\n  numEnemies: number,\r\n  numItems: number\r\n): MapBuilder {\r\n  const dungeonGenerator = _getDungeonGenerator(mapLayout, tileSet);\r\n  return dungeonGenerator.generateDungeon(level, width, height, numEnemies, UnitFactory.createRandomEnemy, numItems, ItemFactory.createRandomItem);\r\n}\r\n\r\nfunction _getDungeonGenerator(mapLayout: MapLayout, tileSet: TileSet): DungeonGenerator {\r\n  switch (mapLayout) {\r\n    case MapLayout.ROOMS_AND_CORRIDORS: {\r\n      const minRoomDimension = 3;\r\n      const maxRoomDimension = 7;\r\n      // return new RoomCorridorDungeonGenerator(\r\n      return new RoomCorridorDungeonGenerator2(\r\n        tileSet,\r\n        minRoomDimension,\r\n        maxRoomDimension\r\n      );\r\n    }\r\n    case MapLayout.BLOB:\r\n      return new BlobDungeonGenerator(tileSet);\r\n  }\r\n}\r\n\r\nexport default { createRandomMap };\r\n","import Unit from '../units/Unit';\r\nimport MapItem from '../items/MapItem';\r\nimport { Coordinates, Entity, Rect, Room, TileType, Tile } from '../types/types';\r\n\r\nclass MapInstance {\r\n  width: number;\r\n  height: number;\r\n  /**\r\n   * [y][x]\r\n   */\r\n  private readonly _tiles: Tile[][];\r\n  rooms: Room[];\r\n  units: Unit[];\r\n  items: MapItem[];\r\n  projectiles: Entity[];\r\n  revealedTiles: Coordinates[];\r\n\r\n  constructor(\r\n    width: number,\r\n    height: number,\r\n    tiles: Tile[][],\r\n    rooms: Room[],\r\n    units: Unit[],\r\n    items: MapItem[]\r\n  ) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this._tiles = tiles;\r\n    this.rooms = rooms;\r\n    this.units = units;\r\n    this.items = items;\r\n    this.projectiles = [];\r\n    this.revealedTiles = [];\r\n  }\r\n\r\n  getTile({ x, y }: Coordinates): Tile {\r\n    if (x < this.width && y < this.height) {\r\n      return (this._tiles[y] || [])[x] || 'NONE';\r\n    }\r\n    throw `Illegal coordinates ${x}, ${y}`;\r\n  }\r\n\r\n  getUnit({ x, y }: Coordinates): (Unit | null) {\r\n    return this.units.filter(u => u.x === x && u.y === y)[0] || null;\r\n  }\r\n\r\n  getItem({ x, y }: Coordinates): (MapItem | null) {\r\n    return this.items.filter(i => i.x === x && i.y === y)[0] || null;\r\n  }\r\n\r\n  getProjectile({ x, y }: Coordinates): (Entity | null) {\r\n    return this.projectiles.filter(p => p.x === x && p.y === y)[0] || null;\r\n  }\r\n\r\n  contains({ x, y }: Coordinates): boolean {\r\n    return x >= 0 && x < this.width && y >= 0 && y < this.height;\r\n  }\r\n\r\n  isBlocked({ x, y }: Coordinates): boolean {\r\n    if (!this.contains({ x, y })) {\r\n      throw `(${x}, ${y}) is not on the map`;\r\n    }\r\n    return !!this.getUnit({ x, y }) || this.getTile({ x, y }).isBlocking;\r\n  }\r\n\r\n  removeUnit({ x, y }: Coordinates) {\r\n    const index = this.units.findIndex(u => (u.x === x && u.y === y));\r\n    if (index >= 0) {\r\n      this.units.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  removeItem({ x, y }: Coordinates) {\r\n    const index = this.items.findIndex(i => (i.x === x && i.y === y));\r\n    if (index >= 0) {\r\n      this.items.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  removeProjectile({ x, y }: Coordinates) {\r\n    const index = this.projectiles.findIndex(i => (i.x === x && i.y === y));\r\n    if (index >= 0) {\r\n      this.projectiles.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getRect(): Rect {\r\n    return {\r\n      left: 0,\r\n      top: 0,\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n  }\r\n}\r\n\r\nexport default MapInstance\r\n","import { Coordinates, Rect } from '../types/types';\r\nimport { sortBy } from '../utils/ArrayUtils';\r\nimport { TileType } from '../types/types';\r\n\r\n/**\r\n * @return `numToChoose` random points from `tiles`, whose tile is in `allowedTileTypes`,\r\n *         which do not collide with `occupiedLocations`\r\n */\r\nconst pickUnoccupiedLocations = (\r\n  tiles: TileType[][],\r\n  allowedTileTypes: TileType[],\r\n  occupiedLocations: Coordinates[],\r\n  numToChoose: number\r\n): Coordinates[] => {\r\n  const unoccupiedLocations: Coordinates[] = [];\r\n  for (let y = 0; y < tiles.length; y++) {\r\n    for (let x = 0; x < tiles[y].length; x++) {\r\n      if (allowedTileTypes.indexOf(tiles[y][x]) !== -1) {\r\n        if (occupiedLocations.filter(loc => coordinatesEquals(loc, { x, y })).length === 0) {\r\n          unoccupiedLocations.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const chosenLocations: Coordinates[] = [];\r\n  for (let i = 0; i < numToChoose; i++) {\r\n    if (unoccupiedLocations.length > 0) {\r\n      sortBy(unoccupiedLocations, ({ x, y }) => -1 * Math.min(...chosenLocations.map(loc => hypotenuse(loc, { x, y }))));\r\n      const index = 0;\r\n      const { x, y } = unoccupiedLocations[index];\r\n      chosenLocations.push({ x, y });\r\n      occupiedLocations.push({ x, y });\r\n      unoccupiedLocations.splice(index, 1);\r\n    }\r\n  }\r\n  return chosenLocations;\r\n};\r\n\r\nconst coordinatesEquals= (first: Coordinates, second: Coordinates): boolean =>\r\n  (first.x === second.x && first.y === second.y);\r\n\r\nconst contains = (rect: Rect, coordinates: Coordinates): boolean =>\r\n  coordinates.x >= rect.left\r\n  && coordinates.x < (rect.left + rect.width)\r\n  && coordinates.y >= rect.top\r\n  && coordinates.y < (rect.top + rect.height);\r\n\r\nfunction manhattanDistance(first: Coordinates, second: Coordinates): number {\r\n  return Math.abs(first.x - second.x) + Math.abs(first.y - second.y);\r\n}\r\n\r\nconst hypotenuse = (first: Coordinates, second: Coordinates): number => {\r\n  const dx = second.x - first.x;\r\n  const dy = second.y - first.y;\r\n  return ((dx * dx) + (dy * dy)) ** 0.5;\r\n};\r\n\r\nconst civDistance = (first: Coordinates, second: Coordinates): number => {\r\n  const dx = Math.abs(first.x - second.x);\r\n  const dy = Math.abs(first.y - second.y);\r\n  return Math.max(dx, dy) + Math.min(dx, dy) / 2;\r\n};\r\n\r\nconst isAdjacent = (first: Coordinates, second: Coordinates): boolean => {\r\n  const dx = Math.abs(first.x - second.x);\r\n  const dy = Math.abs(first.y - second.y);\r\n  return (dx === 0 && (dy === -1 || dy === 1)) || (dy === 0 && (dx === -1 || dx === 1));\r\n};\r\n\r\nconst isTileRevealed = ({ x, y }: Coordinates) => {\r\n  if (jwb.DEBUG) {\r\n    return true;\r\n  }\r\n\r\n  return jwb.state.getMap().revealedTiles.some(tile => coordinatesEquals({ x, y }, tile));\r\n};\r\n\r\nconst isBlocking = (tileType: TileType) => {\r\n  switch (tileType) {\r\n    case 'FLOOR':\r\n    case 'FLOOR_HALL':\r\n    case 'STAIRS_DOWN':\r\n      return false;\r\n    default:\r\n      return true;\r\n  }\r\n};\r\n\r\nconst areAdjacent = (first: Rect, second: Rect, minBorderLength: number): boolean => {\r\n  // right-left\r\n  if (first.left + first.width === second.left) {\r\n    const top = Math.max(first.top, second.top);\r\n    const bottom = Math.min(first.top + first.height, second.top + second.height); // exclusive\r\n    return (bottom - top) >= minBorderLength;\r\n  }\r\n  // bottom-top\r\n  if (first.top + first.height === second.top) {\r\n    const left = Math.max(first.left, second.left);\r\n    const right = Math.min(first.left + first.width, second.left + second.width); // exclusive\r\n    return (right - left) >= minBorderLength;\r\n  }\r\n  // left-right\r\n  if (first.left === second.left + second.width) {\r\n    const top = Math.max(first.top, second.top);\r\n    const bottom = Math.min(first.top + first.height, second.top + second.height); // exclusive\r\n    return (bottom - top) >= minBorderLength;\r\n  }\r\n  // top-bottom\r\n  if (first.top === second.top + second.height) {\r\n    const left = Math.max(first.left, second.left);\r\n    const right = Math.min(first.left + first.width, second.left + second.width); // exclusive\r\n    return (right - left) >= minBorderLength;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport {\r\n  areAdjacent,\r\n  civDistance,\r\n  contains,\r\n  coordinatesEquals,\r\n  hypotenuse,\r\n  isAdjacent,\r\n  isBlocking,\r\n  isTileRevealed,\r\n  manhattanDistance,\r\n  pickUnoccupiedLocations\r\n};\r\n","import { TileSet } from '../../types/TileFactory';\r\nimport DungeonGenerator from './DungeonGenerator';\r\nimport { Coordinates, MapSection, TileType } from '../../types/types';\r\nimport { randInt } from '../../utils/random';\r\nimport { coordinatesEquals, isAdjacent } from '../MapUtils';\r\nimport { comparing } from '../../utils/ArrayUtils';\r\n\r\nclass BlobDungeonGenerator extends DungeonGenerator {\r\n  constructor(tileSet: TileSet) {\r\n    super(tileSet);\r\n  }\r\n\r\n  /**\r\n   * Strategy:\r\n   * Add a floor tile near the middle of the map.\r\n   * Until the map is half-full, continue adding new tiles adjacent to existing tiles.\r\n   * New tile placement should be random - but aim for a certain level of \"snakiness\",\r\n   * where snakiness is defined as the number of tiles within N units\r\n   * (more adjacent tiles - less snaky).\r\n   */\r\n  protected generateTiles(width: number, height: number): MapSection {\r\n    const tiles = this._initTiles(width, height);\r\n\r\n    this._placeInitialTile(width, height, tiles);\r\n    const targetNumFloorTiles : number = this._getTargetNumFloorTiles(width * height);\r\n    while (this._getFloorTiles(tiles).length < targetNumFloorTiles) {\r\n      if (!this._addFloorTile(tiles)) {\r\n        break;\r\n      }\r\n    }\r\n    this._addWalls(tiles);\r\n    return {\r\n      tiles,\r\n      width,\r\n      height,\r\n      rooms: []\r\n    };\r\n  }\r\n\r\n  private _initTiles(width: number, height: number): TileType[][] {\r\n    const tiles: TileType[][] = [];\r\n    for (let y = 0; y < height; y++) {\r\n      const row: TileType[] = [];\r\n      for (let x = 0; x < width; x++) {\r\n        row.push('NONE');\r\n      }\r\n      tiles.push(row);\r\n    }\r\n    return tiles;\r\n  }\r\n\r\n  private _placeInitialTile(width: number, height: number, tiles: TileType[][]) {\r\n    const x = randInt(width * 3 / 8, width * 5 / 8);\r\n    const y = randInt(height * 3 / 8, height * 5 / 8);\r\n    tiles[y][x] = 'FLOOR';\r\n  }\r\n\r\n  private _getTargetNumFloorTiles(max: number) {\r\n    const minRatio = 0.4;\r\n    const maxRatio = 0.7;\r\n    return randInt(\r\n      Math.round(max * minRatio),\r\n      Math.round(max * maxRatio)\r\n    );\r\n  }\r\n\r\n  private _getFloorTiles(tiles: TileType[][]): Coordinates[] {\r\n    const floorTiles: Coordinates[] = [];\r\n    for (let y = 0; y < tiles.length; y++) {\r\n      for (let x = 0; x < tiles[y].length; x++) {\r\n        if (tiles[y][x] === 'FLOOR') {\r\n          floorTiles.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n    return floorTiles;\r\n  }\r\n\r\n  private _getEmptyTiles(tiles: TileType[][]): Coordinates[] {\r\n    const floorTiles: Coordinates[] = [];\r\n    for (let y = 0; y < tiles.length; y++) {\r\n      for (let x = 0; x < tiles[y].length; x++) {\r\n        if (tiles[y][x] === 'NONE') {\r\n          floorTiles.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n    return floorTiles;\r\n  }\r\n\r\n  /**\r\n   * @return whether a tile was successfully added\r\n   */\r\n  private _addFloorTile(tiles: TileType[][]): boolean {\r\n    const floorTiles = this._getFloorTiles(tiles);\r\n    const candidates = this._getCandidates(tiles, floorTiles)\r\n      .sort(comparing(tile => this._getSnakeScore(tile, tiles)));\r\n\r\n    if (candidates.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    // change these ratios to adjust the \"snakiness\"\r\n    const minIndex = Math.floor((candidates.length - 1) * 0.6);\r\n    const maxIndex = Math.floor((candidates.length - 1) * 0.8);\r\n    const index = randInt(minIndex, maxIndex);\r\n\r\n    const { x, y } = candidates[index];\r\n    tiles[y][x] = 'FLOOR';\r\n    return true;\r\n  }\r\n\r\n  private _getCandidates(tiles: TileType[][], floorTiles: Coordinates[]): Coordinates[] {\r\n    return this._getEmptyTiles(tiles)\r\n      .filter(({ x, y }) => y > 0)\r\n      .filter(({ x, y }) => this._isLegalWallCoordinates({ x, y }, tiles))\r\n      .filter(({ x, y }) => floorTiles.some(floorTile => isAdjacent({ x, y }, floorTile)));\r\n  }\r\n\r\n  private _isLegalWallCoordinates({ x, y }: Coordinates, tiles: TileType[][]) {\r\n    // To facilitate wall generation, disallow some specific cases:\r\n    // 1. can't add a floor tile if there's a wall right above it, AND a floor tile right above that\r\n    const height = tiles.length;\r\n    const m = 3; // number of consecutive wall tiles required\r\n    for (let n = 2; n <= m; n++) {\r\n      if (y >= n) {\r\n        if (\r\n          this._range(y - (n - 1), y - 1).every(y2 => tiles[y2][x] === 'NONE')\r\n          && (tiles[y - n][x] === 'FLOOR')\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      // 2. can't add a floor tile if there's a wall right below it, AND a floor tile right below that\r\n      if (y <= (height - 1 - n)) {\r\n        if (\r\n          this._range(y + 1, y + (n - 1)).every(y2 => tiles[y2][x] === 'NONE')\r\n          && (tiles[y + n][x] == 'FLOOR')\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      // 3. check for kitty corner floor tiles\r\n      if (this._hasKittyCornerFloorTile({ x, y }, tiles)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private _hasKittyCornerFloorTile({ x, y }: Coordinates, tiles: TileType[][]) {\r\n    const height = tiles.length;\r\n    const width = tiles[0].length;\r\n    // one tile apart vertically\r\n    for (let [dx, dy] of [[-1, -1], [1, -1], [-1, 1], [1, 1]]) {\r\n      const [x2, y2] = [x + dx, y + dy];\r\n      if (x2 < 0 || x2 >= width || y2 < 0 || y2 >= height) {\r\n        // out of bounds\r\n      } else if (tiles[y2][x2] === 'FLOOR') {\r\n        if (tiles[y2][x] === 'NONE' && tiles[y][x2] === 'NONE') {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    // two tiles apart vertically\r\n    // @X        ab\r\n    // XX        cd\r\n    //  F        ef\r\n    for (let [dx, dy] of [[-1, -2], [1, -2], [-1, 2], [1, 2]]) {\r\n      const a = { x, y };\r\n      const b = { x: x + dx, y };\r\n      const c = { x, y: y + (dy / 2) };\r\n      const d = { x: x + dx, y: y + (dy / 2) };\r\n      const e = { x, y: y + dy };\r\n      const f = { x: x + dx, y: y + dy };\r\n      if (f.x < 0 || f.x >= width || f.y < 0 || f.y >= height) {\r\n        // out of bounds\r\n      } else {\r\n        if (\r\n          tiles[b.y][b.x] === 'NONE'\r\n          && tiles[c.y][c.x] === 'NONE'\r\n          && tiles[d.y][d.x] === 'NONE'\r\n          && tiles[f.y][f.x] === 'FLOOR'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _addWalls(tiles: TileType[][]) {\r\n    const height = tiles.length;\r\n    const width = tiles[0].length;\r\n    for (let y = 0; y < (height - 1); y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        if (tiles[y][x] === 'NONE' && tiles[y + 1][x] === 'FLOOR') {\r\n          tiles[y][x] = 'WALL_TOP';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param end inclusive\r\n   */\r\n  private _range(start: number, end: number): number[] {\r\n    const range = [];\r\n    for (let i = start; i <= end; i++) {\r\n      range.push(i);\r\n    }\r\n    return range;\r\n  }\r\n\r\n  /**\r\n   * @return the number of nearby tiles\r\n   */\r\n  private _getSnakeScore(tile: Coordinates, tiles: TileType[][]) {\r\n    let score = 0;\r\n    const offset = 1;\r\n    const height = tiles.length;\r\n    const width = tiles[0].length;\r\n    const minY = Math.max(0, tile.y - offset);\r\n    const maxY = Math.min(tile.y + offset, height - 1);\r\n    const minX = Math.max(0, tile.x - offset);\r\n    const maxX = Math.min(tile.x + offset, width - 1);\r\n    for (let y = minY; y <= maxY; y++) {\r\n      for (let x = minX; x <= maxX; x++) {\r\n        if (coordinatesEquals(tile, { x, y })) {\r\n          continue;\r\n        }\r\n        if (tiles[y][x] === 'FLOOR') {\r\n          score++;\r\n        }\r\n      }\r\n    }\r\n    return score;\r\n  }\r\n}\r\n\r\nexport default BlobDungeonGenerator;\r\n","import TileFactory, { TileSet } from '../../types/TileFactory';\r\nimport Unit from '../../units/Unit';\r\nimport MapBuilder from '../MapBuilder';\r\nimport MapItem from '../../items/MapItem';\r\nimport { Coordinates, MapSection, TileType } from '../../types/types';\r\nimport { coordinatesEquals, hypotenuse, isBlocking, pickUnoccupiedLocations } from '../MapUtils';\r\nimport { average } from '../../utils/ArrayUtils';\r\nimport Pathfinder from '../../utils/Pathfinder';\r\nimport TileEligibilityChecker from './TileEligibilityChecker';\r\n\r\nabstract class DungeonGenerator {\r\n  protected readonly tileSet: TileSet;\r\n\r\n  protected constructor(tileSet: TileSet) {\r\n    this.tileSet = tileSet;\r\n  }\r\n\r\n  generateDungeon = (\r\n    level: number,\r\n    width: number,\r\n    height: number,\r\n    numEnemies: number,\r\n    enemyUnitSupplier: ({ x, y }: Coordinates, level: number) => Promise<Unit>,\r\n    numItems: number,\r\n    itemSupplier: ({ x, y }: Coordinates, level: number) => Promise<MapItem>\r\n  ): MapBuilder => {\r\n    let section;\r\n    let isValid = false;\r\n    let iterations = 0;\r\n    do {\r\n      const t1 = new Date().getTime();\r\n      section = this.generateTiles(width, height);\r\n      isValid = this._validateSection(section);\r\n      const t2 = new Date().getTime();\r\n      console.log(`Generated dungeon tiles for level ${level} in ${t2 - t1} ms`);\r\n      if (!isValid) {\r\n        console.error(`Generated invalid tiles for level ${level}, regenerating`);\r\n      }\r\n      iterations++;\r\n    } while (!isValid && (iterations < 100));\r\n\r\n    const tileTypes = section.tiles;\r\n\r\n    const [stairsLocation] = pickUnoccupiedLocations(tileTypes, ['FLOOR'], [], 1);\r\n    tileTypes[stairsLocation.y][stairsLocation.x] = 'STAIRS_DOWN';\r\n    const enemyUnitLocations = pickUnoccupiedLocations(tileTypes, ['FLOOR'], [stairsLocation], numEnemies);\r\n    const [playerUnitLocation] = this._pickPlayerLocation(tileTypes, [stairsLocation, ...enemyUnitLocations]);\r\n    const itemLocations = pickUnoccupiedLocations(tileTypes, ['FLOOR'], [stairsLocation, playerUnitLocation, ...enemyUnitLocations], numItems);\r\n\r\n    const tiles = tileTypes.map((row: TileType[]) =>\r\n      row.map(tileType => TileFactory.createTile(tileType, this.tileSet))\r\n    );\r\n\r\n    return new MapBuilder(\r\n      level,\r\n      width,\r\n      height,\r\n      tiles,\r\n      section.rooms,\r\n      playerUnitLocation,\r\n      enemyUnitLocations,\r\n      enemyUnitSupplier,\r\n      itemLocations,\r\n      itemSupplier\r\n    );\r\n  };\r\n\r\n  protected abstract generateTiles(width: number, height: number): MapSection;\r\n\r\n  /**\r\n   * Spawn the player at the tile that maximizes average distance from enemies and the level exit.\r\n   */\r\n  private _pickPlayerLocation = (tiles: TileType[][], blockedTiles: Coordinates[]) => {\r\n    const candidates: [Coordinates, number][] = [];\r\n\r\n    for (let y = 0; y < tiles.length; y++) {\r\n      for (let x = 0; x < tiles[y].length; x++) {\r\n        if (!isBlocking(tiles[y][x]) && !blockedTiles.some(tile => coordinatesEquals(tile, { x, y }))) {\r\n          const tileDistances = blockedTiles.map(blockedTile => hypotenuse({ x, y }, blockedTile));\r\n          candidates.push([{ x, y }, average(tileDistances)]);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.assert(candidates.length > 0);\r\n    return candidates.sort((a, b) => (b[1] - a[1]))[0];\r\n  };\r\n\r\n  /**\r\n   * Verify that:\r\n   * - all rooms can be connected\r\n   * - wall placement is correct\r\n   *   (all floor tiles have either another floor tile, or a wall + wall top directly above them)\r\n   *\r\n   * Frankly, this is a hack and it would be far better to have an algorithm which is mathematically provable\r\n   * to generate the characteristics we want on a consistent basis.  But this is easier and should prevent regressions\r\n   *\r\n   * @return true if the provided `section` is valid\r\n   */\r\n  private _validateSection = (section: MapSection): boolean =>\r\n    this._validateRoomConnectivity(section) && this._validateWallPlacement(section);\r\n\r\n  private _validateRoomConnectivity = (section: MapSection): boolean => {\r\n    const { rooms } = section;\r\n    const roomCenters: Coordinates[] = rooms.map(room => ({\r\n      x: Math.round(room.left + room.width) / 2,\r\n      y: Math.round(room.top + room.height) / 2\r\n    }));\r\n    const tileChecker = new TileEligibilityChecker();\r\n    const unblockedTiles: Coordinates[] = [];\r\n    for (let y = 0; y < section.height; y++) {\r\n      for (let x = 0; x < section.width; x++) {\r\n        if (!tileChecker.isBlocked({ x, y }, section, [])) {\r\n          unblockedTiles.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n\r\n    const pathfinder: Pathfinder = new Pathfinder(() => 1);\r\n    for (let i = 0; i < rooms.length; i++) {\r\n      for (let j = i + 1; j < rooms.length; j++) {\r\n        const path = pathfinder.findPath(roomCenters[i], roomCenters[j], unblockedTiles);\r\n        if (path.length === 0) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  private _validateWallPlacement = (section: MapSection) => {\r\n    const floorTypes = ['FLOOR', 'FLOOR_HALL'];\r\n    const wallTypes = ['WALL', 'WALL_HALL'];\r\n    for (let y = 0; y < section.height; y++) {\r\n      for (let x = 0; x < section.width; x++) {\r\n        const tileType = section.tiles[y][x];\r\n        if (floorTypes.indexOf(tileType) > -1) {\r\n          if (y < 2) {\r\n            return false;\r\n          }\r\n          const oneUp = section.tiles[y - 1][x];\r\n          const twoUp = section.tiles[y - 2][x];\r\n          if (floorTypes.indexOf(oneUp) > -1) {\r\n            // continue\r\n          } else if (wallTypes.indexOf(oneUp) > -1) {\r\n            if (twoUp !== 'WALL_TOP') {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nexport default DungeonGenerator;\r\n","import DungeonGenerator from './DungeonGenerator';\r\nimport { Coordinates, MapSection, Rect, TileType } from '../../types/types';\r\nimport type { TileSet } from '../../types/TileFactory';\r\nimport { randChoice, randInt, shuffle } from '../../utils/random';\r\nimport { areAdjacent, coordinatesEquals } from '../MapUtils';\r\n\r\ntype Direction = 'HORIZONTAL' | 'VERTICAL';\r\n\r\ntype Section = {\r\n  // these are in absolute coordinates\r\n  rect: Rect,\r\n  roomRect: Rect | null\r\n};\r\n\r\ntype Connection = {\r\n  start: Section,\r\n  end: Section,\r\n  startCoordinates: Coordinates,\r\n  endCoordinates: Coordinates,\r\n  middleCoordinates: Coordinates,\r\n  direction: Direction\r\n};\r\n\r\ntype InternalConnection = {\r\n  section: Section,\r\n  neighbors: Section[]\r\n}\r\n\r\nconst ROOM_PADDING = [2, 3, 1, 1]; // left, top, right, bottom\r\nconst MIN_ROOM_FRACTION = 0.4;\r\nconst MAX_ROOM_FRACTION = 0.8;\r\n\r\nclass RoomCorridorDungeonGenerator2 extends DungeonGenerator {\r\n  private readonly _minRoomDimension: number;\r\n  private readonly _maxRoomDimension: number;\r\n  /**\r\n   * @param minRoomDimension inner width, not including wall\r\n   * @param maxRoomDimension inner width, not including wall\r\n   */\r\n  constructor(tileSet: TileSet, minRoomDimension: number, maxRoomDimension: number) {\r\n    super(tileSet);\r\n    this._minRoomDimension = minRoomDimension;\r\n    this._maxRoomDimension = maxRoomDimension;\r\n  }\r\n\r\n  protected generateTiles(width: number, height: number): MapSection {\r\n    // 1. Recursively subdivide the map into sections.\r\n    //    Each section must fall within the max dimensions.\r\n    // 2. Add rooms within sections, with appropriate padding.\r\n    //    (Don't add a room for every section; approximately half.  Rules TBD.)\r\n    const sections : Section[] = this._generateSections(0, 0, width, height);\r\n    this._removeRooms(sections);\r\n\r\n    // 3. Construct a minimal spanning tree between sections (including those without rooms).\r\n    const minimalSpanningTree: Connection[] = this._generateMinimalSpanningTree(sections);\r\n    // 4.  Add all optional connections between sections.\r\n    const optionalConnections: Connection[] = this._generateOptionalConnections(sections, minimalSpanningTree);\r\n    // 5. Add \"red-red\" connections in empty rooms.\r\n    // 6. Add \"red-green\" connections in empty rooms only if:\r\n    //    - both edges connect to a room\r\n    //    - there is no red-red connection in the section\r\n    const internalConnections: InternalConnection[] = this._addInternalConnections(sections, minimalSpanningTree, optionalConnections);\r\n\r\n    const externalConnections = [...minimalSpanningTree, ...optionalConnections];\r\n    this._stripOrphanedConnections(externalConnections, internalConnections);\r\n\r\n    // TODO\r\n    const debugOutput = `\r\n      Sections: ${sections.map(section => this._sectionToString(section)).join('; ')}\r\n      MST: ${minimalSpanningTree.map(this._connectionToString).join('; ')}\r\n      opt: ${optionalConnections.map(this._connectionToString).join('; ')}\r\n      external: ${externalConnections.map(this._connectionToString).join('; ')}\r\n      Internal: ${internalConnections.map(connection => `${this._sectionToString(connection.section)}, ${connection.neighbors.length}`).join('; ')}\r\n    `;\r\n\r\n    console.log(debugOutput);\r\n    // END TODO\r\n\r\n    // Compute the actual tiles based on section/connection specifications.\r\n    const tiles: TileType[][] = this._generateTiles(width, height, sections, externalConnections, internalConnections);\r\n\r\n    // 7. Add walls.\r\n    this._addWalls(tiles);\r\n\r\n    return {\r\n      tiles,\r\n      rooms: [], // TODO\r\n      width,\r\n      height\r\n    };\r\n  }\r\n\r\n  private _sectionToString(section: Section) {\r\n    return `(${section.rect.left}, ${section.rect.top}, ${section.rect.width}, ${section.rect.height})`;\r\n  }\r\n\r\n  /**\r\n   * Generate a rectangular area of tiles with the specified dimensions, consisting of any number of rooms connected\r\n   * by corridors.  To do so, split the area into two sub-areas and call this method recursively.  If this area is\r\n   * not large enough to form two sub-regions, just return a single section.\r\n   */\r\n  private _generateSections(left: number, top: number, width: number, height: number): Section[] {\r\n    const splitDirection = this._getSplitDirection(width, height);\r\n    if (splitDirection === 'HORIZONTAL') {\r\n      const splitX = this._getSplitPoint(left, width, splitDirection);\r\n      const leftWidth = splitX - left;\r\n      const leftSections = this._generateSections(left, top, leftWidth, height);\r\n      const rightWidth = width - leftWidth;\r\n      const rightSections = this._generateSections(splitX, top, rightWidth, height);\r\n      return [...leftSections, ...rightSections];\r\n    } else if (splitDirection === 'VERTICAL') {\r\n      const splitY = this._getSplitPoint(top, height, splitDirection);\r\n      const topHeight = splitY - top;\r\n      const bottomHeight = height - topHeight;\r\n      const topSections = this._generateSections(left, top, width, topHeight);\r\n      const bottomSections = this._generateSections(left, splitY, width, bottomHeight);\r\n      return [...topSections, ...bottomSections];\r\n    } else {\r\n      // base case: generate single section\r\n      const rect: Rect = {\r\n        left,\r\n        top,\r\n        width,\r\n        height\r\n      };\r\n\r\n      const padding = 1;\r\n      const leftPadding = 2;\r\n      const topPadding = 2;\r\n\r\n      const roomRect: Rect = {\r\n        left: left + leftPadding,\r\n        top: top + topPadding,\r\n        width: width - padding - leftPadding,\r\n        height: height - padding - topPadding\r\n      };\r\n\r\n      return [{ rect, roomRect }];\r\n    }\r\n  }\r\n\r\n  private _getSplitDirection(width: number, height: number): Direction | null {\r\n    // First, make sure the area is large enough to support two sections; if not, we're done\r\n    const minWidth = this._minRoomDimension + ROOM_PADDING[0] + ROOM_PADDING[2];\r\n    const minHeight = this._minRoomDimension + ROOM_PADDING[1] + ROOM_PADDING[3];\r\n    const canSplitHorizontally = (width >= (2 * minWidth));\r\n    const canSplitVertically = (height >= (2 * minHeight));\r\n\r\n    if (canSplitHorizontally) {\r\n      return 'HORIZONTAL';\r\n    } else if (canSplitVertically) {\r\n      return 'VERTICAL';\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param start left or top\r\n   * @param dimension width or height\r\n   * @returns the min X/Y coordinate of the *second* room\r\n   */\r\n  private _getSplitPoint(start: number, dimension: number, direction: Direction): number {\r\n    const minWidth = this._minRoomDimension + ROOM_PADDING[0] + ROOM_PADDING[2];\r\n    const minHeight = this._minRoomDimension + ROOM_PADDING[1] + ROOM_PADDING[3];\r\n    const minSectionDimension = (direction === 'HORIZONTAL' ? minWidth : minHeight);\r\n    const minSplitPoint = start + minSectionDimension;\r\n    const maxSplitPoint = start + dimension - minSectionDimension;\r\n    return randInt(minSplitPoint, maxSplitPoint);\r\n  }\r\n\r\n  private _removeRooms(sections: Section[]): void {\r\n    const minRooms = Math.max(3, Math.round(sections.length * MIN_ROOM_FRACTION));\r\n    const maxRooms = Math.max(minRooms, sections.length * MAX_ROOM_FRACTION);\r\n    if (sections.length < minRooms) {\r\n      throw 'Not enough sections';\r\n    }\r\n\r\n    const numRooms = randInt(minRooms, maxRooms);\r\n\r\n    const shuffledSections = [...sections];\r\n    shuffle(shuffledSections);\r\n    for (let i = numRooms; i < shuffledSections.length; i++) {\r\n      shuffledSections[i].roomRect = null;\r\n    }\r\n  }\r\n\r\n  private _generateMinimalSpanningTree(sections: Section[]): Connection[] {\r\n    const connectedSection = randChoice(sections);\r\n    const connectedSections = [connectedSection];\r\n    const unconnectedSections = [...sections].filter(section => section !== connectedSection);\r\n    shuffle(unconnectedSections);\r\n\r\n    const connections : Connection[] = [];\r\n    while (unconnectedSections.length > 0) {\r\n      shuffle(connectedSections);\r\n      let connectedAny = false;\r\n      for (let i = 0; i < connectedSections.length; i++) {\r\n        const connectedSection = connectedSections[i];\r\n\r\n        for (let j = 0; j < unconnectedSections.length; j++) {\r\n          const unconnectedSection = unconnectedSections[j];\r\n          if (this._canConnect(connectedSection, unconnectedSection)) {\r\n            unconnectedSections.splice(j, 1);\r\n            connectedSections.push(unconnectedSection);\r\n            connections.push(this._buildConnection(connectedSection, unconnectedSection));\r\n            connectedAny = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!connectedAny) {\r\n        console.log('connected:');\r\n        connectedSections.forEach(x => console.log(x));\r\n        console.log('unconnected:');\r\n        unconnectedSections.forEach(x => console.log(x));\r\n        throw 'Failed to generate minimal spanning tree';\r\n      }\r\n    }\r\n\r\n    return connections;\r\n  }\r\n\r\n  private _generateOptionalConnections(sections: Section[], spanningConnections: Connection[]): Connection[] {\r\n    const optionalConnections: Connection[] = [];\r\n    for (let i = 0; i < sections.length; i++) {\r\n      const first = sections[i];\r\n      for (let j = i + 1; j < sections.length; j++) {\r\n        const second = sections[j];\r\n        if (this._canConnect(first, second)) {\r\n          if (!spanningConnections.some(connection => this._connectionMatches(connection, first, second))) {\r\n            optionalConnections.push(this._buildConnection(first, second));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return optionalConnections;\r\n  }\r\n\r\n  private _addInternalConnections(\r\n    sections: Section[],\r\n    spanningConnections: Connection[],\r\n    optionalConnections: Connection[]\r\n  ): InternalConnection[] {\r\n    const internalConnections: InternalConnection[] = [];\r\n    for (const section of sections) {\r\n      if (!section.roomRect) {\r\n        const connectedSections: Section[] = [];\r\n        const neighbors = sections.filter(s => s !== section).filter(s => this._canConnect(section, s));\r\n        for (const neighbor of neighbors) {\r\n          if (spanningConnections.some(connection => this._connectionMatches(connection, section, neighbor))) {\r\n            connectedSections.push(neighbor);\r\n          }\r\n        }\r\n        if (connectedSections.length === 1) {\r\n          shuffle(neighbors);\r\n          for (const neighbor of neighbors) {\r\n            if (optionalConnections.some(connection => this._connectionMatches(connection, section, neighbor))) {\r\n              connectedSections.push(neighbor);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (connectedSections.length > 0) {\r\n          internalConnections.push({ section, neighbors: connectedSections });\r\n        }\r\n      }\r\n    }\r\n\r\n    return internalConnections;\r\n  }\r\n\r\n  private _generateTiles = (\r\n    width: number,\r\n    height: number,\r\n    sections: Section[],\r\n    connections: Connection[],\r\n    internalConnections: InternalConnection[]\r\n  ): TileType[][] => {\r\n    const tiles: TileType[][] = [];\r\n    for (let y = 0; y < height; y++) {\r\n      const row: TileType[] = [];\r\n      for (let x = 0; x < width; x++) {\r\n        row.push('NONE');\r\n      }\r\n      tiles.push(row);\r\n    }\r\n\r\n    // add floor tiles for rooms\r\n    for (const section of sections) {\r\n      if (!!section.roomRect) {\r\n        for (let y = section.roomRect.top; y < section.roomRect.top + section.roomRect.height; y++) {\r\n          for (let x = section.roomRect.left; x < section.roomRect.left + section.roomRect.width; x++) {\r\n            tiles[y][x] = 'FLOOR';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // add floor tiles for connections\r\n    for (const connection of connections) {\r\n      const dx = Math.sign(connection.endCoordinates.x - connection.startCoordinates.x);\r\n      const dy = Math.sign(connection.endCoordinates.y - connection.startCoordinates.y);\r\n\r\n      let { x, y } = connection.startCoordinates;\r\n      while (!coordinatesEquals({ x, y }, connection.endCoordinates)) {\r\n        tiles[y][x] = 'FLOOR_HALL';\r\n        x += dx;\r\n        y += dy;\r\n      }\r\n      tiles[y][x] = 'FLOOR_HALL';\r\n    }\r\n\r\n    this._addTilesForInternalConnections(tiles, internalConnections, connections);\r\n\r\n    return tiles;\r\n  };\r\n\r\n  private _addWalls = (tiles: TileType[][]) => {\r\n    const height = tiles.length;\r\n    const width = tiles[0].length;\r\n    for (let y = 0; y < height - 2; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        if (\r\n          tiles[y][x] === 'NONE'\r\n          && tiles[y + 1][x] === 'NONE'\r\n          && (tiles[y + 2][x] === 'FLOOR' || tiles[y + 2][x] === 'FLOOR_HALL')\r\n        ) {\r\n          tiles[y][x] = 'WALL_TOP';\r\n          tiles[y + 1][x] = (tiles[y + 2][x] === 'FLOOR') ? 'WALL' : 'WALL_HALL';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private _canConnect = (first: Section, second: Section): boolean =>\r\n    areAdjacent(first.rect, second.rect, 5);\r\n\r\n  private _connectionMatches = (connection: Connection, first: Section, second: Section) => {\r\n    // ref. equality should be fine\r\n    if (connection.start === first && connection.end === second) {\r\n      return true;\r\n    } else if (connection.start === second && connection.end === first) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  private _buildConnection = (first: Section, second: Section): Connection => {\r\n    let connectionPoint : Coordinates; // on the starting edge of `second`\r\n    let firstCoordinates: Coordinates;\r\n    let secondCoordinates: Coordinates;\r\n    // right-left\r\n    if (first.rect.left + first.rect.width === second.rect.left) {\r\n      const top = Math.max(first.rect.top, second.rect.top);\r\n      const bottom = Math.min(first.rect.top + first.rect.height, second.rect.top + second.rect.height); // exclusive\r\n      connectionPoint = {\r\n        x: second.rect.left,\r\n        y: randInt(top + 2, bottom - 2) // should be in range since we checked _canConnect already\r\n      };\r\n      firstCoordinates = { x: connectionPoint.x - 1, y: connectionPoint.y };\r\n      secondCoordinates = { x: connectionPoint.x + 1, y: connectionPoint.y };\r\n    }\r\n    // bottom-top\r\n    else if (first.rect.top + first.rect.height === second.rect.top) {\r\n      const left = Math.max(first.rect.left, second.rect.left);\r\n      const right = Math.min(first.rect.left + first.rect.width, second.rect.left + second.rect.width); // exclusive\r\n      connectionPoint = {\r\n        x: randInt(left + 2, right - 2), // should be in range since we checked _canConnect already\r\n        y: second.rect.top\r\n      };\r\n      firstCoordinates = { x: connectionPoint.x, y: connectionPoint.y - 1 };\r\n      secondCoordinates = { x: connectionPoint.x, y: connectionPoint.y + 1};\r\n    }\r\n    // left-right\r\n    else if (first.rect.left === second.rect.left + second.rect.width) {\r\n      const top = Math.max(first.rect.top, second.rect.top);\r\n      const bottom = Math.min(first.rect.top + first.rect.height, second.rect.top + second.rect.height); // exclusive\r\n      connectionPoint = {\r\n        x: first.rect.left,\r\n        y: randInt(top + 2, bottom - 2) // should be in range since we checked _canConnect already\r\n      };\r\n      firstCoordinates = { x: connectionPoint.x + 1, y: connectionPoint.y };\r\n      secondCoordinates = { x: connectionPoint.x - 1, y: connectionPoint.y };\r\n    }\r\n    // top-bottom\r\n    else if (first.rect.top === second.rect.top + second.rect.height) {\r\n      const left = Math.max(first.rect.left, second.rect.left);\r\n      const right = Math.min(first.rect.left + first.rect.width, second.rect.left + second.rect.width); // exclusive\r\n      connectionPoint = {\r\n        x: randInt(left + 2, right - 2), // should be in range since we checked _canConnect already\r\n        y: first.rect.top\r\n      };\r\n      firstCoordinates = { x: connectionPoint.x, y: connectionPoint.y + 1 };\r\n      secondCoordinates = { x: connectionPoint.x, y: connectionPoint.y - 1};\r\n    }\r\n    else {\r\n      throw 'Failed to build connection';\r\n    }\r\n\r\n    const direction = (firstCoordinates.x === secondCoordinates.x) ? 'VERTICAL' : 'HORIZONTAL';\r\n    const middleCoordinates = {\r\n      x: (firstCoordinates.x + secondCoordinates.x) / 2,\r\n      y: (firstCoordinates.y + secondCoordinates.y) / 2\r\n    };\r\n\r\n    return {\r\n      start: first,\r\n      end: second,\r\n      startCoordinates: firstCoordinates,\r\n      endCoordinates: secondCoordinates,\r\n      middleCoordinates,\r\n      direction\r\n    };\r\n  };\r\n\r\n  private _connectionToString = (connection: Connection): string =>\r\n    `[(${connection.startCoordinates.x}, ${connection.startCoordinates.y})-(${connection.endCoordinates.x}, ${connection.endCoordinates.y})]`;\r\n\r\n  private _addTilesForInternalConnections = (tiles: TileType[][], internalConnections: InternalConnection[], connections: Connection[]) => {\r\n    for (const internalConnection of internalConnections) {\r\n      const neighbors = [...internalConnection.neighbors];\r\n      shuffle(neighbors);\r\n      for (let i = 0; i < neighbors.length - 1; i++) {\r\n        const firstNeighbor = internalConnection.neighbors[i];\r\n        const secondNeighbor = internalConnection.neighbors[i + 1];\r\n        const firstConnection = connections.filter(c => this._connectionMatches(c, internalConnection.section, firstNeighbor))[0];\r\n        const secondConnection = connections.filter(c => this._connectionMatches(c, internalConnection.section, secondNeighbor))[0];\r\n\r\n        if (!firstConnection || !secondConnection) {\r\n          console.error('fux3');\r\n          console.log(connections.map(this._connectionToString).join(', '));\r\n          console.log(neighbors.join(' '));\r\n          console.log(firstNeighbor.rect);\r\n          console.log(secondNeighbor.rect);\r\n          return;\r\n        }\r\n\r\n        if (firstConnection.direction !== secondConnection.direction) {\r\n          // join perpendicularly\r\n          this._joinPerpendicularly(tiles, firstConnection, secondConnection);\r\n        } else {\r\n          // join parallel connections\r\n          // TODO: This will also try to join U-shaped connections, and doesn't do it correctly!\r\n          // For now, we're just going to run a validation step and regenerate if it fails.\r\n          this._joinParallelConnections(tiles, internalConnection, firstConnection, secondConnection);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private _joinPerpendicularly = (tiles: TileType[][], firstConnection: Connection, secondConnection: Connection) => {\r\n    const start = firstConnection.middleCoordinates;\r\n    const end = secondConnection.middleCoordinates;\r\n    const middle = {\r\n      x: ((firstConnection.direction === 'VERTICAL') ? start : end).x,\r\n      y: ((firstConnection.direction === 'HORIZONTAL') ? start : end).y\r\n    };\r\n\r\n    let dx = Math.sign(middle.x - start.x);\r\n    let dy = Math.sign(middle.y - start.y);\r\n\r\n    let { x, y } = start;\r\n    while (!coordinatesEquals({ x, y }, middle)) {\r\n      tiles[y][x] = 'FLOOR_HALL';\r\n      x += dx;\r\n      y += dy;\r\n    }\r\n\r\n    dx = Math.sign(end.x - middle.x);\r\n    dy = Math.sign(end.y - middle.y);\r\n    while (!coordinatesEquals({ x, y }, end)) {\r\n      tiles[y][x] = 'FLOOR_HALL';\r\n      x += dx;\r\n      y += dy;\r\n    }\r\n  };\r\n\r\n  private _joinParallelConnections = (tiles: TileType[][], internalConnection: InternalConnection, firstConnection: Connection, secondConnection: Connection) => {\r\n    const start = firstConnection.middleCoordinates;\r\n    const end = secondConnection.middleCoordinates;\r\n    const middle = {\r\n      x: Math.round((start.x + end.x) / 2),\r\n      y: Math.round((start.y + end.y) / 2)\r\n    };\r\n\r\n    const xDistance = end.x - start.x;\r\n    const yDistance = end.y - start.y;\r\n    const dx = Math.sign(xDistance);\r\n    const dy = Math.sign(yDistance);\r\n\r\n    const majorDirection: Direction = (Math.abs(xDistance) >= Math.abs(yDistance)) ? 'HORIZONTAL' : 'VERTICAL';\r\n    let { x, y } = start;\r\n\r\n    switch (majorDirection) {\r\n      case 'HORIZONTAL':\r\n        while (x !== middle.x) {\r\n          tiles[y][x] = 'FLOOR_HALL';\r\n          x += dx;\r\n        }\r\n        while (y !== end.y) {\r\n          tiles[y][x] = 'FLOOR_HALL';\r\n          y += dy;\r\n        }\r\n        while (x !== end.x) {\r\n          tiles[y][x] = 'FLOOR_HALL';\r\n          x += dx;\r\n        }\r\n        break;\r\n      case 'VERTICAL':\r\n        while (y !== middle.y) {\r\n          tiles[y][x] = 'FLOOR_HALL';\r\n          y += dy;\r\n        }\r\n        while (x !== end.x) {\r\n          tiles[y][x] = 'FLOOR_HALL';\r\n          x += dx;\r\n        }\r\n        while (y !== end.y) {\r\n          tiles[y][x] = 'FLOOR_HALL';\r\n          y += dy;\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * A connection is orphaned if, for either of its endpoints, there is neither a room nor a connected\r\n   * internal connection that connects to that endpoint.\r\n   *\r\n   * @return a copy of `externalConnections` with the desired elements removed\r\n   */\r\n  private _stripOrphanedConnections = (externalConnections: Connection[], internalConnections: InternalConnection[]) => {\r\n    let removedAnyConnections = false;\r\n    do {\r\n      const orphanedConnections = externalConnections.filter(connection => {\r\n        return this._isOrphanedConnection(connection, internalConnections);\r\n      });\r\n\r\n      this._subtract(externalConnections, orphanedConnections);\r\n\r\n      for (const internalConnection of internalConnections) {\r\n        this._pruneInternalConnection(internalConnection, orphanedConnections);\r\n      }\r\n\r\n      const orphanedInternalConnections = internalConnections.filter(internalConnection => {\r\n        return this._isOrphanedInternalConnection(internalConnection, internalConnections);\r\n      });\r\n      this._subtract(internalConnections, orphanedInternalConnections);\r\n\r\n      removedAnyConnections = (orphanedConnections.length > 0 || orphanedInternalConnections.length > 0);\r\n      console.log(`stripping: ${orphanedConnections.length}, ${orphanedInternalConnections.length}`);\r\n    } while (removedAnyConnections);\r\n  };\r\n\r\n  private _isOrphanedConnection = (connection: Connection, internalConnections: InternalConnection[]) => {\r\n    const { start, end } = connection;\r\n    let startHasInternalConnection = false;\r\n    let endHasInternalConnection = false;\r\n\r\n    for (let internalConnection of internalConnections) {\r\n      if (internalConnection.section === start && internalConnection.neighbors.indexOf(end) > -1) {\r\n        startHasInternalConnection = true;\r\n      }\r\n      if (internalConnection.section === end && internalConnection.neighbors.indexOf(start) > -1) {\r\n        endHasInternalConnection = true;\r\n      }\r\n    }\r\n\r\n    return !(\r\n      (!!start.roomRect || startHasInternalConnection)\r\n      && (!!end.roomRect || endHasInternalConnection)\r\n    );\r\n  };\r\n\r\n  private _pruneInternalConnection = (internalConnection: InternalConnection, orphanedConnections: Connection[]) => {\r\n    for (const connection of orphanedConnections) {\r\n      const { section, neighbors } = internalConnection;\r\n      const { start, end } = connection;\r\n      const updatedNeighbors: Section[] = neighbors.filter(neighbor => {\r\n        if (section === start && neighbor === end) {\r\n          return false;\r\n        }\r\n        if (section === end && neighbor === start) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      this._replace(neighbors, updatedNeighbors);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An internal connection is orphaned if at most one of its neighbors has either a room or another\r\n   * internal connection\r\n   */\r\n  private _isOrphanedInternalConnection = (internalConnection: InternalConnection, internalConnections: InternalConnection[]) => {\r\n    let connectedNeighbors = 0;\r\n    const { section, neighbors } = internalConnection;\r\n    for (const neighbor of neighbors) {\r\n      const neighborHasInternalConnection = internalConnections.find(other => other.section === neighbor && other.neighbors.indexOf(section) > -1);\r\n      if (!!neighbor.roomRect || neighborHasInternalConnection) {\r\n        connectedNeighbors++;\r\n      }\r\n    }\r\n    return connectedNeighbors <= 1;\r\n  };\r\n\r\n  private _replace = <T>(array: T[], contents: T[]) => {\r\n    array.splice(0, array.length);\r\n    array.push(...contents);\r\n  };\r\n\r\n  private _subtract = <T>(array: T[], toRemove: T[]) => {\r\n    const updated = array.filter(element => toRemove.indexOf(element) === -1);\r\n    this._replace(array, updated);\r\n  };\r\n}\r\n\r\nexport default RoomCorridorDungeonGenerator2;\r\n","import { Coordinates, MapSection, TileType } from '../../types/types';\r\nimport { coordinatesEquals } from '../MapUtils';\r\n\r\nclass TileEligibilityChecker {\r\n  isBlocked = ({ x, y }: Coordinates, section: MapSection, exits: Coordinates[]): boolean => {\r\n    // can't draw a path through an existing room or a wall\r\n    const blockedTileTypes: TileType[] = ['FLOOR', /*'FLOOR_HALL',*/ 'WALL', 'WALL_HALL', 'WALL_TOP'];\r\n\r\n    if (exits.some(exit => coordinatesEquals({ x, y }, exit))) {\r\n      return false;\r\n    } else if (section.tiles[y][x] === 'NONE' || section.tiles[y][x] === 'FLOOR_HALL') {\r\n      // skip the check if we're within 1 tile vertically of an exit\r\n      const isNextToExit: boolean = [-2, -1, 1, 2].some(dy => (\r\n        exits.some(exit => coordinatesEquals(exit, { x, y: y + dy }))\r\n      ));\r\n\r\n      if (isNextToExit) {\r\n        return false;\r\n      }\r\n\r\n      // can't draw tiles within 2 tiles vertically of a wall tile, or a room floor tile\r\n      for (let dy of [-2, -1, 1, 2]) {\r\n        if ((y + dy >= 0) && (y + dy < section.height)) {\r\n          const tile = section.tiles[y + dy][x];\r\n          if (blockedTileTypes.indexOf(tile) > -1) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    } else if (blockedTileTypes.indexOf(section.tiles[y][x]) > -1) {\r\n      return true;\r\n    }\r\n    console.error('how\\'d we get here?');\r\n    return true;\r\n  };\r\n}\r\n\r\nexport default TileEligibilityChecker;\r\n","import { Sample } from './types';\r\n\r\nfunction transpose8va([freq, ms]: Sample): Sample {\r\n  return [freq * 2, ms];\r\n}\r\n\r\nfunction transpose8vb([freq, ms]: Sample): Sample {\r\n  return [freq / 2, ms];\r\n}\r\n\r\nexport {\r\n  transpose8va,\r\n  transpose8vb\r\n};","import { Sample } from './types';\r\n\r\nclass CustomOscillator {\r\n  private readonly _delegate: OscillatorNode;\r\n  private readonly _isRepeating: boolean;\r\n  private _isComplete: boolean;\r\n\r\n  constructor(context: AudioContext, gainNode: GainNode, repeating: boolean) {\r\n    this._delegate = context.createOscillator();\r\n    this._delegate.type = 'square';\r\n    this._delegate.connect(gainNode);\r\n\r\n    this._isComplete = false;\r\n    this._isRepeating = repeating;\r\n  }\r\n\r\n  play(samples: Sample[], context: AudioContext) {\r\n    if (samples.length) {\r\n      const startTime = context.currentTime;\r\n      let nextStartTime = startTime;\r\n      for (let i = 0; i < samples.length; i++) {\r\n        const [freq, ms] = samples[i];\r\n        this._delegate.frequency.setValueAtTime(freq, nextStartTime);\r\n        nextStartTime += ms / 1000;\r\n      }\r\n      const runtime = samples.map(([freq, ms]) => ms).reduce((a, b) => a + b);\r\n      this._delegate.start();\r\n\r\n      this._delegate.onended = () => {\r\n        if (this._isRepeating && !this._isComplete) {\r\n          this.play(samples, context);\r\n        } else {\r\n          this._isComplete = true;\r\n        }\r\n      };\r\n      this._delegate.stop(startTime + runtime / 1000);\r\n    }\r\n  }\r\n\r\n  isComplete() {\r\n    return this._isComplete;\r\n  }\r\n\r\n  stop() {\r\n    this._delegate.stop(0);\r\n    this._isComplete = true;\r\n  }\r\n}\r\n\r\nexport default CustomOscillator;","import SoundPlayer from './SoundPlayer';\r\nimport { randChoice } from '../utils/random';\r\nimport { transpose8vb } from './AudioUtils';\r\nimport { Figure, Suite } from './types';\r\n\r\n// TODO very hacky memoizing\r\nlet PLAYER: SoundPlayer | null = null;\r\n\r\nlet ACTIVE_SUITE: Suite | null = null;\r\n\r\nconst TITLE_THEME: Figure = [[600,500],[300,250],[150,250],[900,500],[450,250],[300,250],[500,500],[300,250],[200,250],[200,500],[300,125],[600,125],[900,125],[1200,125],[1500,250]];\r\nconst GAME_OVER: Figure = [[400,150],[300,150],[238,150],[200,150],[300,160],[238,160],[200,160],[150,160],[238,200],[200,200],[150,240],[100,280],[75,1000]]\r\n\r\nconst _getMusicPlayer = () => new SoundPlayer(4, 0.12);\r\n\r\nfunction playSuite(suite: Suite) {\r\n  ACTIVE_SUITE = suite;\r\n  const sections = Object.values(suite.sections);\r\n  const numRepeats = 4;\r\n  for (let i = 0; i < sections.length; i++) {\r\n    let section = sections[i];\r\n    const bass = (!!section.bass) ? randChoice(section.bass) : null;\r\n    let lead: Figure | null;\r\n    if (!!section.lead) {\r\n      do {\r\n        lead = randChoice(section.lead);\r\n      } while (lead === bass);\r\n    }\r\n\r\n    for (let j = 0; j < numRepeats; j++) {\r\n      setTimeout(() => {\r\n        if (suite === ACTIVE_SUITE) {\r\n          const figures = [\r\n            ...(!!bass ? [bass.map(transpose8vb)] : []),\r\n            ...(!!lead ? [lead] : [])\r\n          ];\r\n          figures.forEach(figure => playFigure(figure));\r\n        }\r\n      }, ((numRepeats * i) + j) * suite.length);\r\n    }\r\n  }\r\n  setTimeout(\r\n    () => {\r\n      if (suite === ACTIVE_SUITE) {\r\n        playSuite(suite);\r\n      }\r\n    },\r\n    sections.length * suite.length * numRepeats\r\n  );\r\n}\r\n\r\nfunction playFigure(samples: Figure) {\r\n  if (!PLAYER) {\r\n    PLAYER = _getMusicPlayer();\r\n  }\r\n  PLAYER.playSound(samples, false);\r\n}\r\n\r\nfunction stopMusic() {\r\n  if (PLAYER) {\r\n    PLAYER.stop();\r\n  }\r\n}\r\n\r\nfunction stop() {\r\n  stopMusic();\r\n  ACTIVE_SUITE = null;\r\n}\r\n\r\nexport default {\r\n  TITLE_THEME,\r\n  GAME_OVER,\r\n  playFigure,\r\n  playSuite,\r\n  stop\r\n};\r\n","import SoundPlayer from './SoundPlayer';\r\nimport { Sample } from './types';\r\n\r\nlet PLAYER: SoundPlayer | null = null;\r\n\r\nconst _getSoundPlayer = () => new SoundPlayer(4, 0.20);\r\n\r\nconst playSound = (samples: Sample[]) => {\r\n  if (!PLAYER) {\r\n    PLAYER = _getSoundPlayer();\r\n  }\r\n  PLAYER.playSound(samples, false);\r\n};\r\n\r\nexport {\r\n  playSound\r\n};\r\n","import CustomOscillator from './CustomOscillator';\r\nimport { Sample } from './types';\r\n\r\nclass SoundPlayer {\r\n  private readonly _context: AudioContext;\r\n  private readonly _gainNode: GainNode;\r\n  private _oscillators: CustomOscillator[];\r\n\r\n  constructor (maxPolyphony: number, gain: number) {\r\n    this._context = new AudioContext();\r\n    this._gainNode = this._context.createGain();\r\n    this._gainNode.gain.value = gain * 0.2; // sounds can be VERY loud\r\n    this._gainNode.connect(this._context.destination);\r\n\r\n    this._oscillators = [];\r\n  }\r\n\r\n  stop() {\r\n    try {\r\n      this._oscillators.forEach(oscillator => oscillator.stop());\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  playSound(samples: Sample[], repeating: boolean = false) {\r\n    const oscillator = new CustomOscillator(this._context, this._gainNode, repeating);\r\n    oscillator.play(samples, this._context);\r\n    this._oscillators.push(oscillator);\r\n    this._cleanup();\r\n  };\r\n\r\n  _cleanup() {\r\n    this._oscillators = this._oscillators.filter(o => !o.isComplete());\r\n  }\r\n}\r\n\r\nexport default SoundPlayer;","import DEFLECTED_HIT     from '../../../data/sounds/deflected_hit.json';\r\nimport DESCEND_STAIRS    from '../../../data/sounds/descend_stairs.json';\r\nimport ENEMY_DIES        from '../../../data/sounds/enemy_dies.json';\r\nimport ENEMY_HITS_PLAYER from '../../../data/sounds/enemy_hits_player.json';\r\nimport FOOTSTEP          from '../../../data/sounds/footstep.json';\r\nimport PICK_UP_ITEM      from '../../../data/sounds/pick_up_item.json';\r\nimport PLAYER_DIES       from '../../../data/sounds/player_dies.json';\r\nimport LEVEL_UP          from '../../../data/sounds/level_up.json';\r\nimport OPEN_DOOR         from '../../../data/sounds/open_door.json';\r\nimport PLAYER_HITS_ENEMY from '../../../data/sounds/player_hits_enemy.json';\r\nimport SPECIAL_ATTACK    from '../../../data/sounds/special_attack.json';\r\nimport USE_POTION        from '../../../data/sounds/use_potion.json';\r\n\r\nconst Sounds: {[key: string]: [number, number][]} = <any>{\r\n  DEFLECTED_HIT,\r\n  DESCEND_STAIRS,\r\n  ENEMY_HITS_PLAYER,\r\n  ENEMY_DIES,\r\n  FOOTSTEP,\r\n  LEVEL_UP,\r\n  PICK_UP_ITEM,\r\n  PLAYER_DIES,\r\n  PLAYER_HITS_ENEMY,\r\n  OPEN_DOOR,\r\n  SPECIAL_ATTACK,\r\n  USE_POTION\r\n};\r\n\r\nexport default Sounds;","import jsonColors from '../../../data/colors.json';\r\n\r\n// I think this declaration merging works even though IntelliJ disagrees\r\nconst Color: { [name: string]: string } = jsonColors;\r\ntype Color = string;\r\n\r\nexport default Color;\r\n","/**\r\n * Declaration merging wizardry below!\r\n */\r\n\r\ninterface Direction {\r\n  dx: number,\r\n  dy: number\r\n}\r\n\r\ntype DirectionName = 'N' | 'E' | 'S' | 'W';\r\n\r\nnamespace Direction {\r\n  export const N: Direction = { dx: 0, dy: -1 };\r\n  export const E: Direction = { dx: 1, dy: 0 };\r\n  export const S: Direction = { dx: 0, dy: 1 };\r\n  export const W: Direction = { dx: -1, dy: 0 };\r\n\r\n  const _map = new Map<DirectionName, Direction>([\r\n    ['N', N],\r\n    ['E', E],\r\n    ['S', S],\r\n    ['W', W]\r\n  ]);\r\n\r\n  export const values = () => [N, E, S, W];\r\n\r\n  export const equals = (first: Direction, second: Direction) => first.dx === second.dx && first.dy === second.dy;\r\n\r\n  export const toString = (direction: Direction) => {\r\n    if (equals(direction, Direction.N)) {\r\n      return 'N';\r\n    } else if (equals(direction, Direction.E)) {\r\n      return 'E';\r\n    } else if (equals(direction, Direction.S)) {\r\n      return 'S';\r\n    } else if (equals(direction, Direction.W)) {\r\n      return 'W';\r\n    }\r\n    throw `Invalid direction ${direction}`;\r\n  };\r\n\r\n  export const toLegacyDirection = (direction: Direction): string => {\r\n    const lookup = new Map<DirectionName, string>([\r\n      ['N', 'NW'],\r\n      ['E', 'NE'],\r\n      ['S', 'SE'],\r\n      ['W', 'SW']\r\n    ]);\r\n    return [...lookup.entries()]\r\n      .filter(([from, to]) => equals(direction, _map.get(from)!!))\r\n      .map(([from, to]) => to)\r\n      [0];\r\n  };\r\n}\r\n\r\nexport default Direction;\r\n","import Color from './Color';\r\n\r\n/**\r\n * declaration merging wizardry below\r\n */\r\n\r\ntype PaletteSwaps = {\r\n  [src: string]: Color\r\n};\r\n\r\nnamespace PaletteSwaps {\r\n  export const create = (paletteSwaps: { [src: string]: Color }): PaletteSwaps => {\r\n    const map: { [src: string]: Color } = {};\r\n    Object.entries(paletteSwaps).forEach(([src, dest]) => {\r\n      const srcHex : string = Color[src]!!;\r\n      const destHex : string = Color[dest]!!;\r\n      map[srcHex] = destHex;\r\n    });\r\n    return map;\r\n  }\r\n}\r\n\r\nexport default PaletteSwaps;\r\n","import Sprite from '../graphics/sprites/Sprite';\r\nimport SpriteFactory from '../graphics/sprites/SpriteFactory';\r\nimport { isBlocking } from '../maps/MapUtils';\r\nimport { randChoice } from '../utils/random';\r\nimport { Tile, TileType } from './types';\r\n\r\ntype TileSetName = 'dungeon' | 'cave';\r\n\r\ntype TileSet = {\r\n  [tileType in TileType]?: (Sprite | null)[]\r\n};\r\n\r\ntype TileSetJson = {\r\n  name: string,\r\n  tiles: {\r\n    [tileType: string]: (string | null)[]\r\n  }\r\n}\r\n\r\nconst createTileSet = async (tileSetName: TileSetName): Promise<TileSet> => {\r\n  const json = await import(`../../../data/tilesets/${tileSetName}.json`) as TileSetJson;\r\n  const tileSet: TileSet = {};\r\n  for (const [tileType, filenames] of Object.entries(json.tiles)) {\r\n    const tiles: Sprite[] = [];\r\n    for (const filename of filenames) {\r\n      if (filename) {\r\n        const sprite = await SpriteFactory.createStaticSprite(filename);\r\n        tiles.push(sprite);\r\n      }\r\n    }\r\n\r\n    tileSet[tileType as TileType] = tiles;\r\n  }\r\n  return tileSet;\r\n};\r\n\r\nconst createTile = (type: TileType, tileSet: TileSet): Tile => ({\r\n  type,\r\n  sprite: randChoice(tileSet[type]!!),\r\n  isBlocking: isBlocking(type)\r\n});\r\n\r\nexport type { TileSet };\r\nexport default { createTileSet, createTile };\r\n","import Sprite from '../graphics/sprites/Sprite';\r\nimport Direction from './Direction';\r\n\r\nenum Activity {\r\n  STANDING = 'STANDING',\r\n  WALKING = 'WALKING',\r\n  ATTACKING = 'ATTACKING',\r\n  SHOOTING = 'SHOOTING',\r\n  DAMAGED = 'DAMAGED'\r\n}\r\n\r\nnamespace Activity {\r\n  export const values = (): Activity[] => [\r\n    Activity.STANDING,\r\n    Activity.WALKING,\r\n    Activity.ATTACKING,\r\n    Activity.SHOOTING\r\n  ];\r\n}\r\n\r\ninterface Coordinates {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\ntype CoordinatePair = [Coordinates, Coordinates];\r\n\r\ninterface Entity extends Coordinates {\r\n  char: string,\r\n  sprite: Sprite\r\n}\r\n\r\nenum EquipmentSlot {\r\n  MELEE_WEAPON  = 'MELEE_WEAPON',\r\n  RANGED_WEAPON = 'RANGED_WEAPON',\r\n  CHEST         = 'CHEST',\r\n  HEAD          = 'HEAD'\r\n}\r\n\r\nenum GameScreen {\r\n  GAME      = 'GAME',\r\n  INVENTORY = 'INVENTORY',\r\n  TITLE     = 'TITLE',\r\n  VICTORY   = 'VICTORY',\r\n  GAME_OVER = 'GAME_OVER',\r\n  MINIMAP   = 'MINIMAP'\r\n}\r\n\r\nenum ItemCategory {\r\n  POTION = 'POTION',\r\n  SCROLL = 'SCROLL',\r\n  WEAPON = 'WEAPON',\r\n  ARMOR  = 'ARMOR'\r\n}\r\n\r\ninterface MapSection {\r\n  width:  number,\r\n  height: number,\r\n  rooms:  Room[],\r\n  tiles:  TileType[][]\r\n}\r\n\r\nenum MapLayout {\r\n  ROOMS_AND_CORRIDORS = 'ROOMS_AND_CORRIDORS',\r\n  BLOB                = 'BLOB'\r\n}\r\n\r\ninterface Projectile extends Entity {\r\n  direction: Direction\r\n}\r\n\r\ntype Offsets = { dx: number, dy: number };\r\n\r\ntype PromiseSupplier<T> = (t?: T) => Promise<T>\r\n\r\ninterface Rect {\r\n  left: number,\r\n  top: number,\r\n  width: number,\r\n  height: number\r\n}\r\n\r\ninterface Room extends Rect {\r\n  exits: Coordinates[]\r\n}\r\n\r\ninterface Tile {\r\n  type: TileType,\r\n  sprite: Sprite | null,\r\n  isBlocking: boolean\r\n}\r\n\r\ntype TileType =\r\n  'FLOOR'\r\n  | 'FLOOR_HALL'\r\n  | 'WALL_TOP'\r\n  | 'WALL_HALL'\r\n  | 'WALL'\r\n  | 'NONE'\r\n  | 'STAIRS_DOWN';\r\n\r\ntype UnitType =\r\n  'ANIMAL'\r\n  | 'ELEMENTAL'\r\n  | 'GHOST'\r\n  | 'GOLEM'\r\n  | 'HUMAN'\r\n  | 'WIZARD';\r\n\r\nexport {\r\n  Activity,\r\n  Coordinates,\r\n  CoordinatePair,\r\n  Entity,\r\n  EquipmentSlot,\r\n  GameScreen,\r\n  ItemCategory,\r\n  MapLayout,\r\n  MapSection,\r\n  Offsets,\r\n  Projectile,\r\n  PromiseSupplier,\r\n  Rect,\r\n  Room,\r\n  Tile,\r\n  TileType,\r\n  UnitType\r\n};\r\n","import DynamicSprite from '../graphics/sprites/DynamicSprite';\r\nimport UnitClass from './UnitClass';\r\nimport Sounds from '../sounds/Sounds';\r\nimport InventoryMap from '../items/InventoryMap';\r\nimport EquipmentMap from '../items/equipment/EquipmentMap';\r\nimport Music from '../sounds/Music';\r\nimport UnitController from './controllers/UnitController';\r\nimport UnitAbility from './UnitAbility';\r\nimport Direction from '../types/Direction';\r\nimport EquipmentClass from '../items/equipment/EquipmentClass';\r\nimport Equipment from '../items/equipment/Equipment';\r\nimport { Activity, Coordinates, Entity, EquipmentSlot, GameScreen } from '../types/types';\r\nimport { playSound } from '../sounds/SoundFX';\r\n\r\n// Regenerate 1% of life every 20 turns\r\nconst LIFE_PER_TURN_MULTIPLIER = 0.0005;\r\n\r\ntype Props = {\r\n  name: string,\r\n  unitClass: UnitClass,\r\n  sprite: DynamicSprite<Unit>;\r\n  level: number,\r\n  coordinates: Coordinates,\r\n  controller: UnitController,\r\n  equipment: Equipment[]\r\n};\r\n\r\nclass Unit implements Entity {\r\n  readonly unitClass: UnitClass;\r\n  readonly char = '@';\r\n  readonly sprite: DynamicSprite<Unit>;\r\n  inventory: InventoryMap;\r\n  equipment: EquipmentMap;\r\n  x: number;\r\n  y: number;\r\n  name: string;\r\n  level: number;\r\n  experience: number;\r\n  life: number;\r\n  maxLife: number;\r\n  mana: number | null;\r\n  maxMana: number | null;\r\n  lifeRemainder: number;\r\n  private damage: number;\r\n  controller: UnitController;\r\n  activity: Activity;\r\n  direction: Direction;\r\n  private readonly remainingCooldowns: Map<UnitAbility, number>;\r\n  readonly abilities: UnitAbility[];\r\n  stunDuration: number;\r\n\r\n  constructor({ name, unitClass, sprite, level, coordinates: { x, y }, controller, equipment }: Props) {\r\n    this.unitClass = unitClass;\r\n    this.sprite = sprite;\r\n    sprite.target = this;\r\n    this.inventory = new InventoryMap();\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.name = name;\r\n    this.level = 1;\r\n    this.experience = 0;\r\n    this.life = unitClass.startingLife;\r\n    this.maxLife = unitClass.startingLife;\r\n    this.mana = unitClass.startingMana;\r\n    this.maxMana = unitClass.startingMana;\r\n    this.lifeRemainder = 0;\r\n    this.damage = unitClass.startingDamage;\r\n    this.controller = controller;\r\n    this.activity = Activity.STANDING;\r\n    this.direction = Direction.S;\r\n    this.remainingCooldowns = new Map();\r\n    // TODO: this needs to be specific to the player unit\r\n    this.abilities = [UnitAbility.ATTACK, UnitAbility.HEAVY_ATTACK, UnitAbility.KNOCKBACK_ATTACK, UnitAbility.STUN_ATTACK];\r\n    this.stunDuration = 0;\r\n\r\n    this.equipment = new EquipmentMap();\r\n    for (const eq of equipment) {\r\n      this.equipment.add(eq);\r\n      eq.attach(this);\r\n    }\r\n\r\n    while (this.level < level) {\r\n      this._levelUp(false);\r\n    }\r\n  }\r\n\r\n  private _upkeep = () => {\r\n    // life regeneration\r\n    const lifePerTurn = this.maxLife * LIFE_PER_TURN_MULTIPLIER;\r\n    this.lifeRemainder += lifePerTurn;\r\n    const deltaLife = Math.floor(this.lifeRemainder);\r\n    this.lifeRemainder -= deltaLife;\r\n    this.life = Math.min(this.life + deltaLife, this.maxLife);\r\n\r\n    // I hate javascript, wtf is this callback signature\r\n    this.remainingCooldowns.forEach((cooldown, ability, map) => {\r\n      map.set(ability, Math.max(cooldown - 1, 0));\r\n    });\r\n  };\r\n\r\n  private _endOfTurn = () => {\r\n    // decrement stun duration\r\n    this.stunDuration = Math.max(this.stunDuration - 1, 0)\r\n  };\r\n\r\n  update = async () => {\r\n    await this._upkeep();\r\n    if (this.stunDuration === 0) {\r\n      await this.controller.issueOrder(this);\r\n    }\r\n    await this.sprite.getImage();\r\n    await this._endOfTurn();\r\n  };\r\n\r\n  getDamage = (): number => {\r\n    let damage = this.damage;\r\n    this.equipment.getEntries()\r\n      .filter(([slot, item]) => (slot !== EquipmentSlot.RANGED_WEAPON))\r\n      .forEach(([slot, item]) => {\r\n        damage += (item.damage || 0);\r\n      });\r\n    return damage;\r\n  };\r\n\r\n  getRangedDamage = (): number => {\r\n    let damage = this.damage;\r\n\r\n    this.equipment.getEntries()\r\n      .filter(([slot, item]) => (slot !== EquipmentSlot.MELEE_WEAPON))\r\n      .forEach(([slot, item]) => {\r\n        if (slot === EquipmentSlot.RANGED_WEAPON) {\r\n          damage += (item.damage || 0);\r\n        } else {\r\n          damage += (item.damage || 0) / 2;\r\n        }\r\n      });\r\n    return Math.round(damage);\r\n  };\r\n\r\n  private _levelUp = (withSound: boolean) => {\r\n    this.level++;\r\n    const lifePerLevel = this.unitClass.lifePerLevel;\r\n    this.maxLife += lifePerLevel;\r\n    this.life += lifePerLevel;\r\n    this.damage += this.unitClass.damagePerLevel;\r\n    if (withSound) {\r\n      playSound(Sounds.LEVEL_UP);\r\n    }\r\n  };\r\n\r\n  gainExperience = (experience: number) => {\r\n    this.experience += experience;\r\n    const experienceToNextLevel = this.experienceToNextLevel();\r\n    while (!!experienceToNextLevel && this.experience >= experienceToNextLevel) {\r\n      this.experience -= experienceToNextLevel;\r\n      this._levelUp(true);\r\n    }\r\n  };\r\n\r\n  experienceToNextLevel = (): (number | null) => {\r\n    const { unitClass } = this;\r\n    if (unitClass.experienceToNextLevel && (this.level < unitClass.maxLevel)) {\r\n      return unitClass.experienceToNextLevel[this.level];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  takeDamage = (damage: number, sourceUnit?: Unit) => {\r\n    const { playerUnit } = jwb.state;\r\n    const map = jwb.state.getMap();\r\n\r\n    this.life = Math.max(this.life - damage, 0);\r\n    if (this.life === 0) {\r\n      map.removeUnit(this);\r\n      if (this === playerUnit) {\r\n        jwb.state.screen = GameScreen.GAME_OVER;\r\n        Music.stop();\r\n        Music.playFigure(Music.GAME_OVER);\r\n      } else {\r\n        playSound(Sounds.ENEMY_DIES);\r\n      }\r\n\r\n      if (sourceUnit) {\r\n        sourceUnit.gainExperience(1);\r\n      }\r\n    }\r\n  };\r\n\r\n  getCooldown = (ability: UnitAbility): number => (this.remainingCooldowns.get(ability) || 0);\r\n\r\n  useAbility = (ability: UnitAbility)  => this.remainingCooldowns.set(ability, ability.cooldown);\r\n}\r\n\r\nexport default Unit;\r\n","// TODO: There's a ton of repeated code among the various abilities, try to refactor more of this into the base class\r\n\r\nimport Direction from '../types/Direction';\r\nimport Unit from './Unit';\r\nimport Sounds from '../sounds/Sounds';\r\nimport { EquipmentSlot } from '../types/types';\r\nimport { playSound } from '../sounds/SoundFX';\r\nimport { playArrowAnimation, playAttackingAnimation } from '../graphics/animations/Animations';\r\n\r\n/**\r\n * Helper function for most melee attacks\r\n */\r\nconst attack = async (unit: Unit, target: Unit, damage: number) => {\r\n  jwb.state.messages.push(`${unit.name} hit ${target.name} for ${damage} damage!`);\r\n\r\n  await playAttackingAnimation(unit, target);\r\n  await target.takeDamage(damage, unit);\r\n};\r\n\r\nabstract class UnitAbility {\r\n  readonly name: string;\r\n  readonly cooldown: number;\r\n  readonly icon: string | null;\r\n\r\n  protected constructor(name: string, cooldown: number, icon: string | null = null) {\r\n    this.name = name;\r\n    this.cooldown = cooldown;\r\n    this.icon = icon;\r\n  }\r\n\r\n  abstract use(unit: Unit, direction: Direction | null): Promise<any>;\r\n}\r\n\r\nclass NormalAttack extends UnitAbility {\r\n  constructor() {\r\n    super('ATTACK', 0);\r\n  }\r\n\r\n  use = async (unit: Unit, direction: Direction | null) => {\r\n    if (!direction) {\r\n      throw 'NormalAttack requires a direction!';\r\n    }\r\n\r\n    const { dx, dy } = direction;\r\n    const { x, y } = { x: unit.x + dx, y: unit.y + dy };\r\n\r\n    const { playerUnit } = jwb.state;\r\n    const map = jwb.state.getMap();\r\n    unit.direction = { dx: x - unit.x, dy: y - unit.y };\r\n\r\n    if (map.contains({ x, y }) && !map.isBlocked({ x, y })) {\r\n      [unit.x, unit.y] = [x, y];\r\n      if (unit === playerUnit) {\r\n        await playSound(Sounds.FOOTSTEP);\r\n      }\r\n    } else {\r\n      const targetUnit = map.getUnit({ x, y });\r\n      if (!!targetUnit) {\r\n        const damage = unit.getDamage();\r\n        await attack(unit, targetUnit, damage);\r\n        await playSound(Sounds.PLAYER_HITS_ENEMY);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass HeavyAttack extends UnitAbility {\r\n  constructor() {\r\n    super('HEAVY_ATTACK', 15, 'strong_icon');\r\n  }\r\n\r\n  use = async (unit: Unit, direction: Direction | null) => {\r\n    if (!direction) {\r\n      throw 'HeavyAttack requires a direction!';\r\n    }\r\n\r\n    const { dx, dy } = direction;\r\n    const { x, y } = { x: unit.x + dx, y: unit.y + dy };\r\n\r\n    const { playerUnit } = jwb.state;\r\n    const map = jwb.state.getMap();\r\n    unit.direction = { dx: x - unit.x, dy: y - unit.y };\r\n\r\n    if (map.contains({ x, y }) && !map.isBlocked({ x, y })) {\r\n      [unit.x, unit.y] = [x, y];\r\n      if (unit === playerUnit) {\r\n        await playSound(Sounds.FOOTSTEP);\r\n      }\r\n    } else {\r\n      const targetUnit = map.getUnit({ x, y });\r\n      if (!!targetUnit) {\r\n        unit.useAbility(this);\r\n        const damage = unit.getDamage() * 2;\r\n        await attack(unit, targetUnit, damage);\r\n        await playSound(Sounds.SPECIAL_ATTACK);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass KnockbackAttack extends UnitAbility {\r\n  constructor() {\r\n    super('KNOCKBACK_ATTACK', 15, 'knockback_icon');\r\n  }\r\n\r\n  use = async (unit: Unit, direction: Direction | null) => {\r\n    if (!direction) {\r\n      throw 'KnockbackAttack requires a direction!';\r\n    }\r\n\r\n    const { dx, dy } = direction;\r\n    const { x, y } = { x: unit.x + dx, y: unit.y + dy };\r\n\r\n    const { playerUnit } = jwb.state;\r\n    const map = jwb.state.getMap();\r\n    unit.direction = { dx: x - unit.x, dy: y - unit.y };\r\n\r\n    if (map.contains({ x, y }) && !map.isBlocked({ x, y })) {\r\n      [unit.x, unit.y] = [x, y];\r\n      if (unit === playerUnit) {\r\n        await playSound(Sounds.FOOTSTEP);\r\n      }\r\n    } else {\r\n      const targetUnit = map.getUnit({ x, y });\r\n      if (!!targetUnit) {\r\n        unit.useAbility(this);\r\n        const damage = unit.getDamage();\r\n        await attack(unit, targetUnit, damage);\r\n        let targetCoordinates = { x, y };\r\n\r\n        // knockback by one tile\r\n        const oneTileBack = { x: targetCoordinates.x + dx, y: targetCoordinates.y + dy };\r\n        if (map.contains(oneTileBack) && !map.isBlocked(oneTileBack)) {\r\n          targetCoordinates = oneTileBack;\r\n        }\r\n        [targetUnit.x, targetUnit.y] = [targetCoordinates.x, targetCoordinates.y];\r\n\r\n        // stun for 1 turn (if they're already stunned, just leave it)\r\n        targetUnit.stunDuration = Math.max(targetUnit.stunDuration, 1);\r\n        await playSound(Sounds.SPECIAL_ATTACK);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass StunAttack extends UnitAbility {\r\n  constructor() {\r\n    super('STUN_ATTACK', 15, 'knockback_icon');\r\n  }\r\n\r\n  use = async (unit: Unit, direction: Direction | null) => {\r\n    if (!direction) {\r\n      throw 'StunAttack requires a direction!';\r\n    }\r\n\r\n    const { dx, dy } = direction;\r\n    const { x, y } = { x: unit.x + dx, y: unit.y + dy };\r\n\r\n    const { playerUnit } = jwb.state;\r\n    const map = jwb.state.getMap();\r\n    unit.direction = { dx: x - unit.x, dy: y - unit.y };\r\n\r\n    if (map.contains({ x, y }) && !map.isBlocked({ x, y })) {\r\n      [unit.x, unit.y] = [x, y];\r\n      if (unit === playerUnit) {\r\n        await playSound(Sounds.FOOTSTEP);\r\n      }\r\n    } else {\r\n      const targetUnit = map.getUnit({ x, y });\r\n      if (!!targetUnit) {\r\n        unit.useAbility(this);\r\n        const damage = unit.getDamage();\r\n        await attack(unit, targetUnit, damage);\r\n        // stun for 2 turns (if they're already stunned, just leave it)\r\n        targetUnit.stunDuration = Math.max(targetUnit.stunDuration, 2);\r\n        await playSound(Sounds.SPECIAL_ATTACK);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass ShootArrow extends UnitAbility {\r\n  constructor() {\r\n    super('SHOOT_ARROW', 0);\r\n  }\r\n\r\n  use = async (unit: Unit, direction: Direction | null) => {\r\n    if (!direction) {\r\n      throw 'ShootArrow requires a direction!';\r\n    }\r\n\r\n    const { dx, dy } = direction;\r\n    unit.direction = { dx, dy };\r\n\r\n    await jwb.renderer.render();\r\n    if (!unit.equipment.get(EquipmentSlot.RANGED_WEAPON)) {\r\n      // change direction and re-render, but don't do anything (don't spend a turn)\r\n      return;\r\n    }\r\n\r\n    const map = jwb.state.getMap();\r\n    const coordinatesList = [];\r\n    let { x, y } = { x: unit.x + dx, y: unit.y + dy };\r\n    while (map.contains({ x, y }) && !map.isBlocked({ x, y })) {\r\n      coordinatesList.push({ x, y });\r\n      x += dx;\r\n      y += dy;\r\n    }\r\n\r\n    const targetUnit = map.getUnit({ x, y });\r\n    if (!!targetUnit) {\r\n      const { messages } = jwb.state;\r\n      const damage = unit.getRangedDamage();\r\n      messages.push(`${unit.name} hit ${targetUnit.name} for ${damage} damage!`);\r\n\r\n      await playArrowAnimation(unit, { dx, dy }, coordinatesList, targetUnit);\r\n      await targetUnit.takeDamage(damage, unit);\r\n      await playSound(Sounds.PLAYER_HITS_ENEMY);\r\n    } else {\r\n      await playArrowAnimation(unit, { dx, dy }, coordinatesList, null);\r\n    }\r\n  };\r\n}\r\n\r\nnamespace UnitAbility {\r\n  export const ATTACK = new NormalAttack();\r\n  export const HEAVY_ATTACK = new HeavyAttack();\r\n  export const KNOCKBACK_ATTACK = new KnockbackAttack();\r\n  export const STUN_ATTACK = new StunAttack();\r\n  export const SHOOT_ARROW = new ShootArrow();\r\n}\r\n\r\nexport default UnitAbility;\r\n","import Direction from '../types/Direction';\r\nimport Pathfinder from '../utils/Pathfinder';\r\nimport Unit from './Unit';\r\nimport UnitAbility from './UnitAbility'\r\nimport { randChoice } from '../utils/random';\r\nimport { Coordinates, Rect } from '../types/types';\r\nimport { comparingReversed } from '../utils/ArrayUtils';\r\nimport { coordinatesEquals, manhattanDistance } from '../maps/MapUtils';;\r\n\r\ntype UnitBehavior = (unit: Unit) => Promise<void>;\r\n\r\nfunction _wanderAndAttack(unit: Unit): Promise<void> {\r\n  const { playerUnit } = jwb.state;\r\n  const map = jwb.state.getMap();\r\n  const tiles: Coordinates[] = [];\r\n  Direction.values().forEach(({ dx, dy }) => {\r\n    const [x, y] = [unit.x + dx, unit.y + dy];\r\n    if (map.contains({ x, y })) {\r\n      if (!map.isBlocked({ x, y })) {\r\n        tiles.push({ x, y });\r\n      } else if (map.getUnit({ x, y })) {\r\n        if (map.getUnit({ x, y }) === playerUnit) {\r\n          tiles.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  if (tiles.length > 0) {\r\n    const { x, y } = randChoice(tiles);\r\n    const { dx, dy } = { dx: x - unit.x, dy: y - unit.y };\r\n    return UnitAbility.ATTACK.use(unit, { dx, dy });\r\n  }\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction _wander(unit: Unit): Promise<void> {\r\n  const map = jwb.state.getMap();\r\n  const tiles: Coordinates[] = [];\r\n  Direction.values().forEach(({ dx, dy }) => {\r\n    const [x, y] = [unit.x + dx, unit.y + dy];\r\n    if (map.contains({ x, y })) {\r\n      if (!map.isBlocked({ x, y })) {\r\n        tiles.push({ x, y });\r\n      }\r\n    }\r\n  });\r\n\r\n  if (tiles.length > 0) {\r\n    const { x, y } = randChoice(tiles);\r\n    const { dx, dy } = { dx: x - unit.x, dy: y - unit.y };\r\n    return UnitAbility.ATTACK.use(unit, { dx, dy });\r\n  }\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction _attackPlayerUnit_withPath(unit: Unit): Promise<void> {\r\n  const { playerUnit } = jwb.state;\r\n  const map = jwb.state.getMap();\r\n\r\n  const mapRect: Rect = map.getRect();\r\n\r\n  const unblockedTiles: Coordinates[] = [];\r\n  for (let y = 0; y < mapRect.height; y++) {\r\n    for (let x = 0; x < mapRect.width; x++) {\r\n      if (!map.getTile({ x, y }).isBlocking) {\r\n        unblockedTiles.push({ x, y });\r\n      } else if (coordinatesEquals({ x, y }, playerUnit)) {\r\n        unblockedTiles.push({ x, y });\r\n      } else {\r\n        // blocked\r\n      }\r\n    }\r\n  }\r\n\r\n  const path: Coordinates[] = new Pathfinder(() => 1).findPath(unit, playerUnit, unblockedTiles);\r\n\r\n  if (path.length > 1) {\r\n    const { x, y } = path[1]; // first tile is the unit's own tile\r\n    const unitAtPoint = map.getUnit({ x, y });\r\n    if (!unitAtPoint || unitAtPoint === playerUnit) {\r\n      const { dx, dy } = { dx: x - unit.x, dy: y - unit.y };\r\n      return UnitAbility.ATTACK.use(unit, { dx, dy });\r\n    }\r\n  }\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction _fleeFromPlayerUnit(unit: Unit): Promise<void> {\r\n  const { playerUnit } = jwb.state;\r\n  const map = jwb.state.getMap();\r\n\r\n  const tiles: Coordinates[] = [];\r\n  Direction.values().forEach(({ dx, dy }) => {\r\n    const [x, y] = [unit.x + dx, unit.y + dy];\r\n    if (map.contains({ x, y })) {\r\n      if (!map.isBlocked({ x, y })) {\r\n        tiles.push({ x, y });\r\n      } else if (map.getUnit({ x, y })) {\r\n        if (map.getUnit({ x, y }) === playerUnit) {\r\n          tiles.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  if (tiles.length > 0) {\r\n    const orderedTiles = tiles.sort(comparingReversed(coordinates => manhattanDistance(coordinates, playerUnit)));\r\n    const { x, y } = orderedTiles[0];\r\n    const { dx, dy } = { dx: x - unit.x, dy: y - unit.y };\r\n    return UnitAbility.ATTACK.use(unit, { dx, dy });\r\n  }\r\n  return Promise.resolve();\r\n}\r\n\r\nnamespace UnitBehavior {\r\n  export const WANDER = _wander;\r\n  export const ATTACK_PLAYER = _attackPlayerUnit_withPath;\r\n  export const FLEE_FROM_PLAYER = _fleeFromPlayerUnit;\r\n  export const STAY = () => Promise.resolve();\r\n}\r\n\r\nexport default UnitBehavior;\r\n","import grunt from '../../../data/units/grunt.json';\r\nimport player from '../../../data/units/player.json';\r\nimport snake from '../../../data/units/snake.json';\r\nimport soldier from '../../../data/units/soldier.json';\r\nimport golem from '../../../data/units/golem.json';\r\nimport PaletteSwaps from '../types/PaletteSwaps';\r\nimport { UnitType } from '../types/types';\r\n\r\ninterface UnitClass {\r\n  readonly name: string;\r\n  readonly sprite: string,\r\n  readonly type: UnitType;\r\n  readonly paletteSwaps: PaletteSwaps;\r\n  readonly startingLife: number;\r\n  readonly startingMana: number | null;\r\n  readonly startingDamage: number;\r\n  readonly minLevel: number;\r\n  readonly maxLevel: number;\r\n  readonly lifePerLevel: number;\r\n  readonly manaPerLevel: number | null;\r\n  readonly damagePerLevel: number;\r\n  readonly equipment?: string[];\r\n\r\n  // TODO move these somewhere else\r\n  readonly experienceToNextLevel?: number[];\r\n  readonly aiParameters?: AIParameters;\r\n}\r\n\r\nconst _load = (json: any): UnitClass => {\r\n  return <UnitClass>{\r\n    ...json,\r\n    // We're using \"friendly\" color names, convert them to hex now\r\n    paletteSwaps: PaletteSwaps.create(json.paletteSwaps),\r\n  };\r\n}\r\n\r\nconst _enemyClasses: UnitClass[] = [grunt, golem, soldier, snake].map(json => _load(json));\r\n\r\nnamespace UnitClass {\r\n  export const PLAYER: UnitClass = _load(player);\r\n\r\n  export const getEnemyClasses = (): UnitClass[] => {\r\n    return _enemyClasses;\r\n  }\r\n\r\n  export const load = _load;\r\n}\r\n\r\nexport default UnitClass;\r\n","import SpriteFactory from '../graphics/sprites/SpriteFactory';\r\nimport UnitClass from './UnitClass';\r\nimport Unit from './Unit';\r\nimport { HUMAN_DETERMINISTIC } from './controllers/AIUnitControllers';\r\nimport { Coordinates } from '../types/types';\r\nimport { randChoice } from '../utils/random';\r\n\r\nconst createRandomEnemy = async ({ x, y }: Coordinates, level: number): Promise<Unit> => {\r\n  const candidates = UnitClass.getEnemyClasses()\r\n    .filter(unitClass => level >= unitClass.minLevel)\r\n    .filter(unitClass => level <= unitClass.maxLevel);\r\n\r\n  const unitClass = randChoice(candidates);\r\n  const sprite = await SpriteFactory.createUnitSprite(unitClass.sprite, unitClass.paletteSwaps);\r\n\r\n  return new Unit({\r\n    unitClass,\r\n    sprite,\r\n    name: unitClass.name, // TODO - individual unit names\r\n    coordinates: { x, y },\r\n    controller: HUMAN_DETERMINISTIC,\r\n    level\r\n  });\r\n};\r\n\r\nexport default {\r\n  createRandomEnemy\r\n};\r\n","import Unit from '../Unit';\r\nimport UnitController from './UnitController';\r\nimport UnitBehavior from '../UnitBehaviors';\r\nimport { manhattanDistance } from '../../maps/MapUtils';\r\nimport { randInt, weightedRandom } from '../../utils/random';\r\n\r\nconst HUMAN_CAUTIOUS: UnitController = {\r\n  issueOrder(unit: Unit) {\r\n    const { playerUnit } = jwb.state;\r\n\r\n    let behavior: UnitBehavior;\r\n    const distanceToPlayer = manhattanDistance(unit, playerUnit);\r\n\r\n    if (distanceToPlayer === 1) {\r\n      if ((unit.life / unit.maxLife) >= 0.4) {\r\n        behavior = UnitBehavior.ATTACK_PLAYER;\r\n      } else {\r\n        behavior = weightedRandom({\r\n          'ATTACK_PLAYER': 0.2,\r\n          'WANDER': 0.5,\r\n          'FLEE_FROM_PLAYER': 0.3\r\n        }, UnitBehavior);\r\n      }\r\n    } else if (distanceToPlayer >= 5) {\r\n      behavior = weightedRandom({\r\n        'WANDER': 0.3,\r\n        'ATTACK_PLAYER': 0.1,\r\n        'STAY': 0.6\r\n      }, UnitBehavior);\r\n    } else {\r\n      behavior = weightedRandom({\r\n        'ATTACK_PLAYER': 0.6,\r\n        'WANDER': 0.2,\r\n        'STAY': 0.2\r\n      }, UnitBehavior);\r\n    }\r\n    return behavior(unit);\r\n  }\r\n};\r\n\r\nconst HUMAN_AGGRESSIVE = {\r\n  issueOrder(unit: Unit) {\r\n    const { playerUnit } = jwb.state;\r\n\r\n    let behavior: UnitBehavior;\r\n    const distanceToPlayer = manhattanDistance(unit, playerUnit);\r\n\r\n    if (distanceToPlayer === 1) {\r\n      behavior = UnitBehavior.ATTACK_PLAYER;\r\n    } else if (distanceToPlayer >= 6) {\r\n      behavior = weightedRandom({\r\n        'WANDER': 0.4,\r\n        'STAY': 0.4,\r\n        'ATTACK_PLAYER': 0.2\r\n      }, UnitBehavior);\r\n    } else {\r\n      behavior = weightedRandom({\r\n        'ATTACK_PLAYER': 0.9,\r\n        'STAY': 0.1\r\n      }, UnitBehavior);\r\n    }\r\n    return behavior(unit);\r\n  }\r\n};\r\n\r\nconst HUMAN_DETERMINISTIC = {\r\n  issueOrder(unit: Unit) {\r\n    const { playerUnit, turn } = jwb.state;\r\n\r\n    const { aiParameters } = unit.unitClass;\r\n    if (!aiParameters) {\r\n      throw 'HUMAN_DETERMINISTIC behavior requires aiParams!';\r\n    }\r\n    const { speed, visionRange, fleeThreshold } = aiParameters;\r\n\r\n    let behavior: UnitBehavior;\r\n    const distanceToPlayer = manhattanDistance(unit, playerUnit);\r\n\r\n    if (!_canMove(speed)) {\r\n      behavior = UnitBehavior.STAY;\r\n    } else if ((unit.life / unit.maxLife) < fleeThreshold) {\r\n      behavior = UnitBehavior.FLEE_FROM_PLAYER;\r\n    } else if (distanceToPlayer <= visionRange) {\r\n      behavior = UnitBehavior.ATTACK_PLAYER;\r\n    } else {\r\n      if (randInt(0, 1) === 1) {\r\n        behavior = UnitBehavior.STAY;\r\n      } else {\r\n        behavior = UnitBehavior.WANDER;\r\n      }\r\n    }\r\n    return behavior(unit);\r\n  }\r\n};\r\n\r\nfunction _canMove(speed: number) {\r\n  // deterministic version\r\n  // const { turn } = jwb.state;\r\n  // return Math.floor(speed * turn) > Math.floor(speed * (turn - 1));\r\n\r\n  // random version\r\n  return Math.random() < speed;\r\n}\r\n\r\nexport {\r\n  HUMAN_CAUTIOUS,\r\n  HUMAN_AGGRESSIVE,\r\n  HUMAN_DETERMINISTIC\r\n};\r\n","import UnitController from './UnitController';\r\nimport Unit from '../Unit';\r\nimport { PromiseSupplier } from '../../types/types';\r\n\r\nclass PlayerUnitController implements UnitController {\r\n  queuedOrder: PromiseSupplier<void> | null;\r\n\r\n  constructor() {\r\n    this.queuedOrder = null;\r\n  }\r\n\r\n  issueOrder(unit: Unit): Promise<any> {\r\n    if (!!this.queuedOrder) {\r\n      const { queuedOrder } = this;\r\n      this.queuedOrder = null;\r\n      return queuedOrder();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\r\nexport default PlayerUnitController;","function sortBy<T>(list: T[], mapFunction: (t: T) => number) {\r\n  return list.sort((a, b) => mapFunction(a) - mapFunction(b));\r\n}\r\n\r\nfunction sortByReversed<T>(list: T[], mapFunction: (t: T) => number) {\r\n  return list.sort((a, b) => mapFunction(b) - mapFunction(a));\r\n}\r\n\r\nfunction comparing<T>(mapFunction: (t: T) => number) {\r\n  return (a: T, b: T) => mapFunction(a) - mapFunction(b);\r\n}\r\n\r\nfunction comparingReversed<T>(mapFunction: (t: T) => number) {\r\n  return (a: T, b: T) => mapFunction(b) - mapFunction(a);\r\n}\r\n\r\nfunction average(list: number[]) {\r\n  const sum = list.reduce((a, b) => a + b);\r\n  return sum / list.length;\r\n}\r\n\r\nexport {\r\n  sortBy,\r\n  sortByReversed,\r\n  comparing,\r\n  comparingReversed,\r\n  average\r\n};","import { coordinatesEquals, manhattanDistance } from '../maps/MapUtils';\r\nimport { Coordinates } from '../types/types';\r\nimport { randChoice } from './random';\r\n\r\nconst CARDINAL_DIRECTIONS = [[0, -1], [1, 0], [0, 1], [-1, 0]];\r\n\r\ninterface Node extends Coordinates {\r\n  parent: Node | null,\r\n  cost: number\r\n}\r\n\r\n/**\r\n * @return the exact cost of the path from `start` to `coordinates`\r\n */\r\nfunction g(node: Node, start: Coordinates): number {\r\n  return node.cost;\r\n}\r\n\r\n/**\r\n * @return the heuristic estimated cost from `coordinates` to `goal`\r\n */\r\nfunction h(coordinates: Coordinates, goal: Coordinates): number {\r\n  // return civDistance(coordinates, goal);\r\n\r\n  return manhattanDistance(coordinates, goal);\r\n}\r\n\r\n/**\r\n * @return an estimate of the best cost from `start` to `goal` combining both `g` and `h`\r\n */\r\nfunction f(node: Node, start: Coordinates, goal: Coordinates): number {\r\n  return g(node, start) + h(node, goal);\r\n}\r\n\r\nfunction traverseParents(node: Node): Coordinates[] {\r\n  const path: Coordinates[] = [];\r\n  for (let currentNode: (Node | null) = node; !!currentNode; currentNode = currentNode.parent) {\r\n    const coordinates = { x: currentNode.x, y: currentNode.y };\r\n    path.splice(0, 0, coordinates); // add it at the beginning of the list\r\n  }\r\n  return path;\r\n}\r\n\r\n/**\r\n * http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html\r\n */\r\nclass Pathfinder {\r\n  private readonly _tileCostCalculator: (first: Coordinates, second: Coordinates) => number;\r\n\r\n  /**\r\n   * http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html\r\n   */\r\n  constructor(\r\n    tileCostCalculator: (first: Coordinates, second: Coordinates) => number\r\n  ) {\r\n    this._tileCostCalculator = tileCostCalculator;\r\n  }\r\n\r\n  /**\r\n   * http://theory.stanford.edu/~amitp/GameProgramming/ImplementationNotes.html#sketch\r\n   *\r\n   * @param tiles All allowable unblocked tiles\r\n   */\r\n  findPath(start: Coordinates, goal: Coordinates, tiles: Coordinates[]): Coordinates[] {\r\n    const open: Node[] = [\r\n      { x: start.x, y: start.y, cost: 0, parent: null }\r\n    ];\r\n    const closed: Coordinates[] = [];\r\n\r\n    while (true) {\r\n      if (open.length === 0) {\r\n        return [];\r\n      }\r\n\r\n      type NodeWithCost = { node: Node, cost: number };\r\n\r\n      const nodeCosts: NodeWithCost[] = open.map(node => ({ node, cost: f(node, start, goal) }))\r\n        .sort((a, b) => a.cost - b.cost);\r\n\r\n      const bestNode = nodeCosts[0].node;\r\n      if (coordinatesEquals(bestNode, goal)) {\r\n        // Done!\r\n        return traverseParents(bestNode);\r\n      } else {\r\n        const bestNodes: NodeWithCost[] = nodeCosts.filter(({ node, cost }) => cost === nodeCosts[0].cost);\r\n        const { node: chosenNode, cost: chosenNodeCost }: NodeWithCost = randChoice(bestNodes);\r\n        open.splice(open.indexOf(chosenNode), 1);\r\n        closed.push(chosenNode);\r\n        this._findNeighbors(chosenNode, tiles).forEach(neighbor => {\r\n          if (closed.some(coordinates => coordinatesEquals(coordinates, neighbor))) {\r\n            // already been seen, don't need to look at it*\r\n          } else if (open.some(coordinates => coordinatesEquals(coordinates, neighbor))) {\r\n            // don't need to look at it now, will look later?\r\n          } else {\r\n            const movementCost = this._tileCostCalculator(chosenNode, neighbor);\r\n            open.push({\r\n              x: neighbor.x,\r\n              y: neighbor.y,\r\n              cost: chosenNodeCost + movementCost,\r\n              parent: chosenNode\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private _findNeighbors(tile: Coordinates, tiles: Coordinates[]): Coordinates[] {\r\n    return CARDINAL_DIRECTIONS\r\n      .map(([dx, dy]) => ({ x: tile.x + dx, y: tile.y + dy }))\r\n      .filter(({ x, y }) => tiles.some(tile => coordinatesEquals(tile, { x, y })));\r\n  }\r\n}\r\n\r\nexport default Pathfinder;\r\n","const wait = async (milliseconds: number): Promise<void> =>\r\n  new Promise<void>(resolve => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, milliseconds);\r\n  });\r\n\r\nexport {\r\n  wait\r\n};\r\n","/**\r\n * Dynamically populate a template according to {@param template}. which specifies the template string,\r\n * and {@param variables}, which provides key-value substitutions for each variable in {@param template}.\r\n */\r\nfunction fillTemplate(template: string, variables: Object) {\r\n  const keys = Object.keys(variables);\r\n  const values = Object.values(variables);\r\n  return new Function(...keys,  `return \\`${template}\\`;`)(...values);\r\n}\r\n\r\nexport { fillTemplate };","/**\r\n * @param max inclusive\r\n */\r\nconst randInt = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\nconst randChoice = <T>(list: T[]): T => list[randInt(0, list.length - 1)];\r\n\r\n/**\r\n * Fisher-Yates.  Stolen from https://bost.ocks.org/mike/shuffle/\r\n */\r\nconst shuffle = <T>(list: T[]) => {\r\n  let n = list.length;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (n > 0) {\r\n    // Pick a remaining element...\r\n    const i = randInt(0, n - 1);\r\n    n--;\r\n\r\n    // And swap it with the current element.\r\n    const tmp = list[n];\r\n    list[n] = list[i];\r\n    list[i] = tmp;\r\n  }\r\n}\r\n\r\nconst weightedRandom = <T>(\r\n  probabilities: { [key: string]: number },\r\n  mappedObjects: { [key: string]: T }\r\n): T => {\r\n  const total = Object.values(probabilities).reduce((a, b) => a + b);\r\n  const rand = Math.random() * total;\r\n  let counter = 0;\r\n  const entries = Object.entries(probabilities);\r\n  for (let i = 0; i < entries.length; i++) {\r\n    const [key, value] = entries[i];\r\n    counter += value;\r\n    if (counter > rand) {\r\n      return mappedObjects[key];\r\n    }\r\n  }\r\n\r\n  throw 'Error in weightedRandom()!';\r\n}\r\n\r\nexport {\r\n  randInt,\r\n  randChoice,\r\n  weightedRandom,\r\n  shuffle\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"roguelike-js:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkroguelike_js\"] = self[\"webpackChunkroguelike_js\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { initialize } from './core/actions';\r\nimport { initDebug } from './core/debug';\r\n\r\ninitialize();\r\ninitDebug();"],"sourceRoot":""}